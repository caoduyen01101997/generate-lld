{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { applyMixins, cloneObj, forEach, has, isEmpty, map, PRINT_WARNING, toFastProperties, values } from \"../../utils/utils\";\nimport { computeAllProdsFollows } from \"../grammar/follow\";\nimport { createTokenInstance, EOF } from \"../../scan/tokens_public\";\nimport { expandAllNestedRuleNames } from \"../cst/cst\";\nimport { defaultGrammarValidatorErrorProvider, defaultParserErrorProvider } from \"../errors_public\";\nimport { resolveGrammar, validateGrammar } from \"../grammar/gast/gast_resolver_public\";\nimport { Recoverable } from \"./traits/recoverable\";\nimport { LooksAhead } from \"./traits/looksahead\";\nimport { TreeBuilder } from \"./traits/tree_builder\";\nimport { LexerAdapter } from \"./traits/lexer_adapter\";\nimport { RecognizerApi } from \"./traits/recognizer_api\";\nimport { RecognizerEngine } from \"./traits/recognizer_engine\";\nimport { ErrorHandler } from \"./traits/error_handler\";\nimport { ContentAssist } from \"./traits/context_assist\";\nimport { GastRecorder } from \"./traits/gast_recorder\";\nimport { PerformanceTracer } from \"./traits/perf_tracer\";\nexport var END_OF_FILE = createTokenInstance(EOF, \"\", NaN, NaN, NaN, NaN, NaN, NaN);\nObject.freeze(END_OF_FILE);\nexport var DEFAULT_PARSER_CONFIG = Object.freeze({\n  recoveryEnabled: false,\n  maxLookahead: 4,\n  ignoredIssues: {},\n  dynamicTokensEnabled: false,\n  outputCst: true,\n  errorMessageProvider: defaultParserErrorProvider,\n  nodeLocationTracking: \"none\",\n  traceInitPerf: false,\n  skipValidations: false\n});\nexport var DEFAULT_RULE_CONFIG = Object.freeze({\n  recoveryValueFunc: function () {\n    return undefined;\n  },\n  resyncEnabled: true\n});\nexport var ParserDefinitionErrorType;\n(function (ParserDefinitionErrorType) {\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_RULE_NAME\"] = 0] = \"INVALID_RULE_NAME\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"DUPLICATE_RULE_NAME\"] = 1] = \"DUPLICATE_RULE_NAME\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_RULE_OVERRIDE\"] = 2] = \"INVALID_RULE_OVERRIDE\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"DUPLICATE_PRODUCTIONS\"] = 3] = \"DUPLICATE_PRODUCTIONS\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"UNRESOLVED_SUBRULE_REF\"] = 4] = \"UNRESOLVED_SUBRULE_REF\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"LEFT_RECURSION\"] = 5] = \"LEFT_RECURSION\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"NONE_LAST_EMPTY_ALT\"] = 6] = \"NONE_LAST_EMPTY_ALT\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"AMBIGUOUS_ALTS\"] = 7] = \"AMBIGUOUS_ALTS\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"CONFLICT_TOKENS_RULES_NAMESPACE\"] = 8] = \"CONFLICT_TOKENS_RULES_NAMESPACE\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_TOKEN_NAME\"] = 9] = \"INVALID_TOKEN_NAME\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_NESTED_RULE_NAME\"] = 10] = \"INVALID_NESTED_RULE_NAME\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"DUPLICATE_NESTED_NAME\"] = 11] = \"DUPLICATE_NESTED_NAME\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"NO_NON_EMPTY_LOOKAHEAD\"] = 12] = \"NO_NON_EMPTY_LOOKAHEAD\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"AMBIGUOUS_PREFIX_ALTS\"] = 13] = \"AMBIGUOUS_PREFIX_ALTS\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"TOO_MANY_ALTS\"] = 14] = \"TOO_MANY_ALTS\";\n})(ParserDefinitionErrorType || (ParserDefinitionErrorType = {}));\nexport function EMPTY_ALT(value) {\n  if (value === void 0) {\n    value = undefined;\n  }\n  return function () {\n    return value;\n  };\n}\nvar Parser = /** @class */function () {\n  function Parser(tokenVocabulary, config) {\n    if (config === void 0) {\n      config = DEFAULT_PARSER_CONFIG;\n    }\n    this.ignoredIssues = DEFAULT_PARSER_CONFIG.ignoredIssues;\n    this.definitionErrors = [];\n    this.selfAnalysisDone = false;\n    var that = this;\n    that.initErrorHandler(config);\n    that.initLexerAdapter();\n    that.initLooksAhead(config);\n    that.initRecognizerEngine(tokenVocabulary, config);\n    that.initRecoverable(config);\n    that.initTreeBuilder(config);\n    that.initContentAssist();\n    that.initGastRecorder(config);\n    that.initPerformanceTracer(config);\n    /* istanbul ignore if - complete over-kill to test this, we should only add a test when we actually hard deprecate it and throw an error... */\n    if (has(config, \"ignoredIssues\") && config.ignoredIssues !== DEFAULT_PARSER_CONFIG.ignoredIssues) {\n      PRINT_WARNING(\"The <ignoredIssues> IParserConfig property is soft-deprecated and will be removed in future versions.\\n\\t\" + \"Please use the <IGNORE_AMBIGUITIES> flag on the relevant DSL method instead.\");\n    }\n    this.ignoredIssues = has(config, \"ignoredIssues\") ? config.ignoredIssues : DEFAULT_PARSER_CONFIG.ignoredIssues;\n    this.skipValidations = has(config, \"skipValidations\") ? config.skipValidations : DEFAULT_PARSER_CONFIG.skipValidations;\n  }\n  /**\r\n   *  @deprecated use the **instance** method with the same name instead\r\n   */\n  Parser.performSelfAnalysis = function (parserInstance) {\n    ;\n    parserInstance.performSelfAnalysis();\n  };\n  Parser.prototype.performSelfAnalysis = function () {\n    var _this = this;\n    this.TRACE_INIT(\"performSelfAnalysis\", function () {\n      var defErrorsMsgs;\n      _this.selfAnalysisDone = true;\n      var className = _this.className;\n      _this.TRACE_INIT(\"toFastProps\", function () {\n        // Without this voodoo magic the parser would be x3-x4 slower\n        // It seems it is better to invoke `toFastProperties` **before**\n        // Any manipulations of the `this` object done during the recording phase.\n        toFastProperties(_this);\n      });\n      _this.TRACE_INIT(\"Grammar Recording\", function () {\n        try {\n          _this.enableRecording();\n          // Building the GAST\n          forEach(_this.definedRulesNames, function (currRuleName) {\n            var wrappedRule = _this[currRuleName];\n            var originalGrammarAction = wrappedRule[\"originalGrammarAction\"];\n            var recordedRuleGast = undefined;\n            _this.TRACE_INIT(currRuleName + \" Rule\", function () {\n              recordedRuleGast = _this.topLevelRuleRecord(currRuleName, originalGrammarAction);\n            });\n            _this.gastProductionsCache[currRuleName] = recordedRuleGast;\n          });\n        } finally {\n          _this.disableRecording();\n        }\n      });\n      var resolverErrors = [];\n      _this.TRACE_INIT(\"Grammar Resolving\", function () {\n        resolverErrors = resolveGrammar({\n          rules: values(_this.gastProductionsCache)\n        });\n        _this.definitionErrors.push.apply(_this.definitionErrors, resolverErrors); // mutability for the win?\n      });\n\n      _this.TRACE_INIT(\"Grammar Validations\", function () {\n        // only perform additional grammar validations IFF no resolving errors have occurred.\n        // as unresolved grammar may lead to unhandled runtime exceptions in the follow up validations.\n        if (isEmpty(resolverErrors) && _this.skipValidations === false) {\n          var validationErrors = validateGrammar({\n            rules: values(_this.gastProductionsCache),\n            maxLookahead: _this.maxLookahead,\n            tokenTypes: values(_this.tokensMap),\n            ignoredIssues: _this.ignoredIssues,\n            errMsgProvider: defaultGrammarValidatorErrorProvider,\n            grammarName: className\n          });\n          _this.definitionErrors.push.apply(_this.definitionErrors, validationErrors); // mutability for the win?\n        }\n      });\n      // this analysis may fail if the grammar is not perfectly valid\n      if (isEmpty(_this.definitionErrors)) {\n        // The results of these computations are not needed unless error recovery is enabled.\n        if (_this.recoveryEnabled) {\n          _this.TRACE_INIT(\"computeAllProdsFollows\", function () {\n            var allFollows = computeAllProdsFollows(values(_this.gastProductionsCache));\n            _this.resyncFollows = allFollows;\n          });\n        }\n        _this.TRACE_INIT(\"ComputeLookaheadFunctions\", function () {\n          _this.preComputeLookaheadFunctions(values(_this.gastProductionsCache));\n        });\n      }\n      _this.TRACE_INIT(\"expandAllNestedRuleNames\", function () {\n        // TODO: is this needed for EmbeddedActionsParser?\n        var cstAnalysisResult = expandAllNestedRuleNames(values(_this.gastProductionsCache), _this.fullRuleNameToShort);\n        _this.allRuleNames = cstAnalysisResult.allRuleNames;\n      });\n      if (!Parser.DEFER_DEFINITION_ERRORS_HANDLING && !isEmpty(_this.definitionErrors)) {\n        defErrorsMsgs = map(_this.definitionErrors, function (defError) {\n          return defError.message;\n        });\n        throw new Error(\"Parser Definition Errors detected:\\n \" + defErrorsMsgs.join(\"\\n-------------------------------\\n\"));\n      }\n    });\n  };\n  // Set this flag to true if you don't want the Parser to throw error when problems in it's definition are detected.\n  // (normally during the parser's constructor).\n  // This is a design time flag, it will not affect the runtime error handling of the parser, just design time errors,\n  // for example: duplicate rule names, referencing an unresolved subrule, ect...\n  // This flag should not be enabled during normal usage, it is used in special situations, for example when\n  // needing to display the parser definition errors in some GUI(online playground).\n  Parser.DEFER_DEFINITION_ERRORS_HANDLING = false;\n  return Parser;\n}();\nexport { Parser };\napplyMixins(Parser, [Recoverable, LooksAhead, TreeBuilder, LexerAdapter, RecognizerEngine, RecognizerApi, ErrorHandler, ContentAssist, GastRecorder, PerformanceTracer]);\nvar CstParser = /** @class */function (_super) {\n  __extends(CstParser, _super);\n  function CstParser(tokenVocabulary, config) {\n    if (config === void 0) {\n      config = DEFAULT_PARSER_CONFIG;\n    }\n    var _this = this;\n    var configClone = cloneObj(config);\n    configClone.outputCst = true;\n    _this = _super.call(this, tokenVocabulary, configClone) || this;\n    return _this;\n  }\n  return CstParser;\n}(Parser);\nexport { CstParser };\nvar EmbeddedActionsParser = /** @class */function (_super) {\n  __extends(EmbeddedActionsParser, _super);\n  function EmbeddedActionsParser(tokenVocabulary, config) {\n    if (config === void 0) {\n      config = DEFAULT_PARSER_CONFIG;\n    }\n    var _this = this;\n    var configClone = cloneObj(config);\n    configClone.outputCst = false;\n    _this = _super.call(this, tokenVocabulary, configClone) || this;\n    return _this;\n  }\n  return EmbeddedActionsParser;\n}(Parser);\nexport { EmbeddedActionsParser };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","applyMixins","cloneObj","forEach","has","isEmpty","map","PRINT_WARNING","toFastProperties","values","computeAllProdsFollows","createTokenInstance","EOF","expandAllNestedRuleNames","defaultGrammarValidatorErrorProvider","defaultParserErrorProvider","resolveGrammar","validateGrammar","Recoverable","LooksAhead","TreeBuilder","LexerAdapter","RecognizerApi","RecognizerEngine","ErrorHandler","ContentAssist","GastRecorder","PerformanceTracer","END_OF_FILE","NaN","freeze","DEFAULT_PARSER_CONFIG","recoveryEnabled","maxLookahead","ignoredIssues","dynamicTokensEnabled","outputCst","errorMessageProvider","nodeLocationTracking","traceInitPerf","skipValidations","DEFAULT_RULE_CONFIG","recoveryValueFunc","undefined","resyncEnabled","ParserDefinitionErrorType","EMPTY_ALT","value","Parser","tokenVocabulary","config","definitionErrors","selfAnalysisDone","that","initErrorHandler","initLexerAdapter","initLooksAhead","initRecognizerEngine","initRecoverable","initTreeBuilder","initContentAssist","initGastRecorder","initPerformanceTracer","performSelfAnalysis","parserInstance","_this","TRACE_INIT","defErrorsMsgs","className","enableRecording","definedRulesNames","currRuleName","wrappedRule","originalGrammarAction","recordedRuleGast","topLevelRuleRecord","gastProductionsCache","disableRecording","resolverErrors","rules","push","apply","validationErrors","tokenTypes","tokensMap","errMsgProvider","grammarName","allFollows","resyncFollows","preComputeLookaheadFunctions","cstAnalysisResult","fullRuleNameToShort","allRuleNames","DEFER_DEFINITION_ERRORS_HANDLING","defError","message","Error","join","CstParser","_super","configClone","call","EmbeddedActionsParser"],"sources":["D:/sourcecode/create-json-type/your-app/generate-lld/node_modules/chevrotain/lib_esm/src/parse/parser/parser.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport { applyMixins, cloneObj, forEach, has, isEmpty, map, PRINT_WARNING, toFastProperties, values } from \"../../utils/utils\";\r\nimport { computeAllProdsFollows } from \"../grammar/follow\";\r\nimport { createTokenInstance, EOF } from \"../../scan/tokens_public\";\r\nimport { expandAllNestedRuleNames } from \"../cst/cst\";\r\nimport { defaultGrammarValidatorErrorProvider, defaultParserErrorProvider } from \"../errors_public\";\r\nimport { resolveGrammar, validateGrammar } from \"../grammar/gast/gast_resolver_public\";\r\nimport { Recoverable } from \"./traits/recoverable\";\r\nimport { LooksAhead } from \"./traits/looksahead\";\r\nimport { TreeBuilder } from \"./traits/tree_builder\";\r\nimport { LexerAdapter } from \"./traits/lexer_adapter\";\r\nimport { RecognizerApi } from \"./traits/recognizer_api\";\r\nimport { RecognizerEngine } from \"./traits/recognizer_engine\";\r\nimport { ErrorHandler } from \"./traits/error_handler\";\r\nimport { ContentAssist } from \"./traits/context_assist\";\r\nimport { GastRecorder } from \"./traits/gast_recorder\";\r\nimport { PerformanceTracer } from \"./traits/perf_tracer\";\r\nexport var END_OF_FILE = createTokenInstance(EOF, \"\", NaN, NaN, NaN, NaN, NaN, NaN);\r\nObject.freeze(END_OF_FILE);\r\nexport var DEFAULT_PARSER_CONFIG = Object.freeze({\r\n    recoveryEnabled: false,\r\n    maxLookahead: 4,\r\n    ignoredIssues: {},\r\n    dynamicTokensEnabled: false,\r\n    outputCst: true,\r\n    errorMessageProvider: defaultParserErrorProvider,\r\n    nodeLocationTracking: \"none\",\r\n    traceInitPerf: false,\r\n    skipValidations: false\r\n});\r\nexport var DEFAULT_RULE_CONFIG = Object.freeze({\r\n    recoveryValueFunc: function () { return undefined; },\r\n    resyncEnabled: true\r\n});\r\nexport var ParserDefinitionErrorType;\r\n(function (ParserDefinitionErrorType) {\r\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_RULE_NAME\"] = 0] = \"INVALID_RULE_NAME\";\r\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"DUPLICATE_RULE_NAME\"] = 1] = \"DUPLICATE_RULE_NAME\";\r\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_RULE_OVERRIDE\"] = 2] = \"INVALID_RULE_OVERRIDE\";\r\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"DUPLICATE_PRODUCTIONS\"] = 3] = \"DUPLICATE_PRODUCTIONS\";\r\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"UNRESOLVED_SUBRULE_REF\"] = 4] = \"UNRESOLVED_SUBRULE_REF\";\r\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"LEFT_RECURSION\"] = 5] = \"LEFT_RECURSION\";\r\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"NONE_LAST_EMPTY_ALT\"] = 6] = \"NONE_LAST_EMPTY_ALT\";\r\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"AMBIGUOUS_ALTS\"] = 7] = \"AMBIGUOUS_ALTS\";\r\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"CONFLICT_TOKENS_RULES_NAMESPACE\"] = 8] = \"CONFLICT_TOKENS_RULES_NAMESPACE\";\r\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_TOKEN_NAME\"] = 9] = \"INVALID_TOKEN_NAME\";\r\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_NESTED_RULE_NAME\"] = 10] = \"INVALID_NESTED_RULE_NAME\";\r\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"DUPLICATE_NESTED_NAME\"] = 11] = \"DUPLICATE_NESTED_NAME\";\r\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"NO_NON_EMPTY_LOOKAHEAD\"] = 12] = \"NO_NON_EMPTY_LOOKAHEAD\";\r\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"AMBIGUOUS_PREFIX_ALTS\"] = 13] = \"AMBIGUOUS_PREFIX_ALTS\";\r\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"TOO_MANY_ALTS\"] = 14] = \"TOO_MANY_ALTS\";\r\n})(ParserDefinitionErrorType || (ParserDefinitionErrorType = {}));\r\nexport function EMPTY_ALT(value) {\r\n    if (value === void 0) { value = undefined; }\r\n    return function () {\r\n        return value;\r\n    };\r\n}\r\nvar Parser = /** @class */ (function () {\r\n    function Parser(tokenVocabulary, config) {\r\n        if (config === void 0) { config = DEFAULT_PARSER_CONFIG; }\r\n        this.ignoredIssues = DEFAULT_PARSER_CONFIG.ignoredIssues;\r\n        this.definitionErrors = [];\r\n        this.selfAnalysisDone = false;\r\n        var that = this;\r\n        that.initErrorHandler(config);\r\n        that.initLexerAdapter();\r\n        that.initLooksAhead(config);\r\n        that.initRecognizerEngine(tokenVocabulary, config);\r\n        that.initRecoverable(config);\r\n        that.initTreeBuilder(config);\r\n        that.initContentAssist();\r\n        that.initGastRecorder(config);\r\n        that.initPerformanceTracer(config);\r\n        /* istanbul ignore if - complete over-kill to test this, we should only add a test when we actually hard deprecate it and throw an error... */\r\n        if (has(config, \"ignoredIssues\") &&\r\n            config.ignoredIssues !== DEFAULT_PARSER_CONFIG.ignoredIssues) {\r\n            PRINT_WARNING(\"The <ignoredIssues> IParserConfig property is soft-deprecated and will be removed in future versions.\\n\\t\" +\r\n                \"Please use the <IGNORE_AMBIGUITIES> flag on the relevant DSL method instead.\");\r\n        }\r\n        this.ignoredIssues = has(config, \"ignoredIssues\")\r\n            ? config.ignoredIssues\r\n            : DEFAULT_PARSER_CONFIG.ignoredIssues;\r\n        this.skipValidations = has(config, \"skipValidations\")\r\n            ? config.skipValidations\r\n            : DEFAULT_PARSER_CONFIG.skipValidations;\r\n    }\r\n    /**\r\n     *  @deprecated use the **instance** method with the same name instead\r\n     */\r\n    Parser.performSelfAnalysis = function (parserInstance) {\r\n        ;\r\n        parserInstance.performSelfAnalysis();\r\n    };\r\n    Parser.prototype.performSelfAnalysis = function () {\r\n        var _this = this;\r\n        this.TRACE_INIT(\"performSelfAnalysis\", function () {\r\n            var defErrorsMsgs;\r\n            _this.selfAnalysisDone = true;\r\n            var className = _this.className;\r\n            _this.TRACE_INIT(\"toFastProps\", function () {\r\n                // Without this voodoo magic the parser would be x3-x4 slower\r\n                // It seems it is better to invoke `toFastProperties` **before**\r\n                // Any manipulations of the `this` object done during the recording phase.\r\n                toFastProperties(_this);\r\n            });\r\n            _this.TRACE_INIT(\"Grammar Recording\", function () {\r\n                try {\r\n                    _this.enableRecording();\r\n                    // Building the GAST\r\n                    forEach(_this.definedRulesNames, function (currRuleName) {\r\n                        var wrappedRule = _this[currRuleName];\r\n                        var originalGrammarAction = wrappedRule[\"originalGrammarAction\"];\r\n                        var recordedRuleGast = undefined;\r\n                        _this.TRACE_INIT(currRuleName + \" Rule\", function () {\r\n                            recordedRuleGast = _this.topLevelRuleRecord(currRuleName, originalGrammarAction);\r\n                        });\r\n                        _this.gastProductionsCache[currRuleName] = recordedRuleGast;\r\n                    });\r\n                }\r\n                finally {\r\n                    _this.disableRecording();\r\n                }\r\n            });\r\n            var resolverErrors = [];\r\n            _this.TRACE_INIT(\"Grammar Resolving\", function () {\r\n                resolverErrors = resolveGrammar({\r\n                    rules: values(_this.gastProductionsCache)\r\n                });\r\n                _this.definitionErrors.push.apply(_this.definitionErrors, resolverErrors); // mutability for the win?\r\n            });\r\n            _this.TRACE_INIT(\"Grammar Validations\", function () {\r\n                // only perform additional grammar validations IFF no resolving errors have occurred.\r\n                // as unresolved grammar may lead to unhandled runtime exceptions in the follow up validations.\r\n                if (isEmpty(resolverErrors) && _this.skipValidations === false) {\r\n                    var validationErrors = validateGrammar({\r\n                        rules: values(_this.gastProductionsCache),\r\n                        maxLookahead: _this.maxLookahead,\r\n                        tokenTypes: values(_this.tokensMap),\r\n                        ignoredIssues: _this.ignoredIssues,\r\n                        errMsgProvider: defaultGrammarValidatorErrorProvider,\r\n                        grammarName: className\r\n                    });\r\n                    _this.definitionErrors.push.apply(_this.definitionErrors, validationErrors); // mutability for the win?\r\n                }\r\n            });\r\n            // this analysis may fail if the grammar is not perfectly valid\r\n            if (isEmpty(_this.definitionErrors)) {\r\n                // The results of these computations are not needed unless error recovery is enabled.\r\n                if (_this.recoveryEnabled) {\r\n                    _this.TRACE_INIT(\"computeAllProdsFollows\", function () {\r\n                        var allFollows = computeAllProdsFollows(values(_this.gastProductionsCache));\r\n                        _this.resyncFollows = allFollows;\r\n                    });\r\n                }\r\n                _this.TRACE_INIT(\"ComputeLookaheadFunctions\", function () {\r\n                    _this.preComputeLookaheadFunctions(values(_this.gastProductionsCache));\r\n                });\r\n            }\r\n            _this.TRACE_INIT(\"expandAllNestedRuleNames\", function () {\r\n                // TODO: is this needed for EmbeddedActionsParser?\r\n                var cstAnalysisResult = expandAllNestedRuleNames(values(_this.gastProductionsCache), _this.fullRuleNameToShort);\r\n                _this.allRuleNames = cstAnalysisResult.allRuleNames;\r\n            });\r\n            if (!Parser.DEFER_DEFINITION_ERRORS_HANDLING &&\r\n                !isEmpty(_this.definitionErrors)) {\r\n                defErrorsMsgs = map(_this.definitionErrors, function (defError) { return defError.message; });\r\n                throw new Error(\"Parser Definition Errors detected:\\n \" + defErrorsMsgs.join(\"\\n-------------------------------\\n\"));\r\n            }\r\n        });\r\n    };\r\n    // Set this flag to true if you don't want the Parser to throw error when problems in it's definition are detected.\r\n    // (normally during the parser's constructor).\r\n    // This is a design time flag, it will not affect the runtime error handling of the parser, just design time errors,\r\n    // for example: duplicate rule names, referencing an unresolved subrule, ect...\r\n    // This flag should not be enabled during normal usage, it is used in special situations, for example when\r\n    // needing to display the parser definition errors in some GUI(online playground).\r\n    Parser.DEFER_DEFINITION_ERRORS_HANDLING = false;\r\n    return Parser;\r\n}());\r\nexport { Parser };\r\napplyMixins(Parser, [\r\n    Recoverable,\r\n    LooksAhead,\r\n    TreeBuilder,\r\n    LexerAdapter,\r\n    RecognizerEngine,\r\n    RecognizerApi,\r\n    ErrorHandler,\r\n    ContentAssist,\r\n    GastRecorder,\r\n    PerformanceTracer\r\n]);\r\nvar CstParser = /** @class */ (function (_super) {\r\n    __extends(CstParser, _super);\r\n    function CstParser(tokenVocabulary, config) {\r\n        if (config === void 0) { config = DEFAULT_PARSER_CONFIG; }\r\n        var _this = this;\r\n        var configClone = cloneObj(config);\r\n        configClone.outputCst = true;\r\n        _this = _super.call(this, tokenVocabulary, configClone) || this;\r\n        return _this;\r\n    }\r\n    return CstParser;\r\n}(Parser));\r\nexport { CstParser };\r\nvar EmbeddedActionsParser = /** @class */ (function (_super) {\r\n    __extends(EmbeddedActionsParser, _super);\r\n    function EmbeddedActionsParser(tokenVocabulary, config) {\r\n        if (config === void 0) { config = DEFAULT_PARSER_CONFIG; }\r\n        var _this = this;\r\n        var configClone = cloneObj(config);\r\n        configClone.outputCst = false;\r\n        _this = _super.call(this, tokenVocabulary, configClone) || this;\r\n        return _this;\r\n    }\r\n    return EmbeddedActionsParser;\r\n}(Parser));\r\nexport { EmbeddedActionsParser };\r\n//# sourceMappingURL=parser.js.map"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}