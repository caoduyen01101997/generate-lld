{"ast":null,"code":"var _jsxFileName = \"/Users/duyenpnc/Desktop/tool-tu-lam/generate-lld/src/genTableParam.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst YourComponent = () => {\n  _s();\n  const [jsonData, setJsonData] = useState(\"\");\n  const [tableData, setTableData] = useState([]);\n  const parseJson = () => {\n    try {\n      const parsedData = JSON.parse(jsonData);\n      const tableRows = Object.entries(parsedData).map(([key, value], index) => ({\n        stt: index + 1,\n        attribute: key,\n        dataType: typeof value,\n        description: \"\",\n        required: \"N\"\n      }));\n      setTableData(tableRows);\n    } catch (error) {\n      console.error(\"Invalid JSON format\", error);\n      setTableData([]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      rows: 10,\n      cols: 40,\n      value: jsonData,\n      onChange: e => setJsonData(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: parseJson,\n      children: \"Parse JSON\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"STT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Attribute\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"DataType\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: tableData.map(row => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.stt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.attribute\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.dataType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.required\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)]\n        }, row.stt, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(YourComponent, \"GY8BGXa3uc9JsX/rBD0x8bgKPLM=\");\n_c = YourComponent;\nexport default YourComponent;\nvar _c;\n$RefreshReg$(_c, \"YourComponent\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","YourComponent","_s","jsonData","setJsonData","tableData","setTableData","parseJson","parsedData","JSON","parse","tableRows","Object","entries","map","key","value","index","stt","attribute","dataType","description","required","error","console","children","rows","cols","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","row","_c","$RefreshReg$"],"sources":["/Users/duyenpnc/Desktop/tool-tu-lam/generate-lld/src/genTableParam.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst YourComponent = () => {\n  const [jsonData, setJsonData] = useState(\"\");\n  const [tableData, setTableData] = useState([]);\n\n  const parseJson = () => {\n    try {\n      const parsedData = JSON.parse(jsonData);\n      const tableRows = Object.entries(parsedData).map(([key, value], index) => ({\n        stt: index + 1,\n        attribute: key,\n        dataType: typeof value,\n        description: \"\",\n        required: \"N\",\n      }));\n      setTableData(tableRows);\n    } catch (error) {\n      console.error(\"Invalid JSON format\", error);\n      setTableData([]);\n    }\n  };\n\n  return (\n    <div>\n      <textarea\n        rows={10}\n        cols={40}\n        value={jsonData}\n        onChange={(e) => setJsonData(e.target.value)}\n      />\n      <br />\n      <button onClick={parseJson}>Parse JSON</button>\n\n      {/* Display your table or other components based on tableData */}\n      <table>\n        <thead>\n          <tr>\n            <th>STT</th>\n            <th>Attribute</th>\n            <th>DataType</th>\n            <th>Description</th>\n            <th>Required</th>\n          </tr>\n        </thead>\n        <tbody>\n          {tableData.map((row) => (\n            <tr key={row.stt}>\n              <td>{row.stt}</td>\n              <td>{row.attribute}</td>\n              <td>{row.dataType}</td>\n              <td>{row.description}</td>\n              <td>{row.required}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default YourComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}