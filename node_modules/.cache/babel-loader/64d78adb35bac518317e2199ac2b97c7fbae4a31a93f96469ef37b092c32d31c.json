{"ast":null,"code":"var _jsxFileName = \"/Users/duyenpnc/Desktop/tool-tu-lam/your-app-name/src/scan-java.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport javaParser from 'java-parser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JavaCodeAnalyzer = () => {\n  _s();\n  const [javaCode, setJavaCode] = useState('');\n  const [result, setResult] = useState(null);\n  const analyzeJavaCode = () => {\n    try {\n      const parsedResult = javaParser.parse(javaCode);\n      setResult(parsedResult);\n    } catch (error) {\n      console.error('Error analyzing Java code:', error);\n      setResult(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      rows: \"10\",\n      cols: \"80\",\n      value: javaCode,\n      onChange: e => setJavaCode(e.target.value),\n      placeholder: \"Paste your Java code here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: analyzeJavaCode,\n      children: \"Analyze Java Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-bold mb-2\",\n        children: \"Analysis Result:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(result, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(JavaCodeAnalyzer, \"6QoZ7+1cEZnhGN+xDSsc05u01Lg=\");\n_c = JavaCodeAnalyzer;\nexport default JavaCodeAnalyzer;\nvar _c;\n$RefreshReg$(_c, \"JavaCodeAnalyzer\");","map":{"version":3,"names":["React","useState","javaParser","jsxDEV","_jsxDEV","JavaCodeAnalyzer","_s","javaCode","setJavaCode","result","setResult","analyzeJavaCode","parsedResult","parse","error","console","children","rows","cols","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","className","JSON","stringify","_c","$RefreshReg$"],"sources":["/Users/duyenpnc/Desktop/tool-tu-lam/your-app-name/src/scan-java.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport javaParser from 'java-parser';\r\n\r\nconst JavaCodeAnalyzer = () => {\r\n  const [javaCode, setJavaCode] = useState('');\r\n  const [result, setResult] = useState(null);\r\n\r\n  const analyzeJavaCode = () => {\r\n    try {\r\n      const parsedResult = javaParser.parse(javaCode);\r\n      setResult(parsedResult);\r\n    } catch (error) {\r\n      console.error('Error analyzing Java code:', error);\r\n      setResult(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <textarea\r\n        rows=\"10\"\r\n        cols=\"80\"\r\n        value={javaCode}\r\n        onChange={(e) => setJavaCode(e.target.value)}\r\n        placeholder=\"Paste your Java code here\"\r\n      />\r\n      <br />\r\n      <button onClick={analyzeJavaCode}>Analyze Java Code</button>\r\n\r\n      {result && (\r\n        <div className=\"mt-4\">\r\n          <h3 className=\"text-lg font-bold mb-2\">Analysis Result:</h3>\r\n          <pre>{JSON.stringify(result, null, 2)}</pre>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JavaCodeAnalyzer;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAE1C,MAAMU,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAI;MACF,MAAMC,YAAY,GAAGV,UAAU,CAACW,KAAK,CAACN,QAAQ,CAAC;MAC/CG,SAAS,CAACE,YAAY,CAAC;IACzB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClDJ,SAAS,CAAC,IAAI,CAAC;IACjB;EACF,CAAC;EAED,oBACEN,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MACEa,IAAI,EAAC,IAAI;MACTC,IAAI,EAAC,IAAI;MACTC,KAAK,EAAEZ,QAAS;MAChBa,QAAQ,EAAGC,CAAC,IAAKb,WAAW,CAACa,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC7CI,WAAW,EAAC;IAA2B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC,eACFvB,OAAA;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNvB,OAAA;MAAQwB,OAAO,EAAEjB,eAAgB;MAAAK,QAAA,EAAC;IAAiB;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAE3DlB,MAAM,iBACLL,OAAA;MAAKyB,SAAS,EAAC,MAAM;MAAAb,QAAA,gBACnBZ,OAAA;QAAIyB,SAAS,EAAC,wBAAwB;QAAAb,QAAA,EAAC;MAAgB;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5DvB,OAAA;QAAAY,QAAA,EAAMc,IAAI,CAACC,SAAS,CAACtB,MAAM,EAAE,IAAI,EAAE,CAAC;MAAC;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACrB,EAAA,CAlCID,gBAAgB;AAAA2B,EAAA,GAAhB3B,gBAAgB;AAoCtB,eAAeA,gBAAgB;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}