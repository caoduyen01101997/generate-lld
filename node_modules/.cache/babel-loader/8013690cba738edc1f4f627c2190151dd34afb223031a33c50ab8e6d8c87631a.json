{"ast":null,"code":"\"use strict\";\n\nconst {\n  tokenMatcher\n} = require(\"chevrotain\");\nfunction defineRules($, t) {\n  // ---------------------\n  // Productions from ยง4 (Types, Values, and Variables)\n  // ---------------------\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-4.html#jls-PrimitiveType\n  $.RULE(\"primitiveType\", () => {\n    $.MANY(() => {\n      $.SUBRULE($.annotation);\n    });\n    $.OR([{\n      ALT: () => $.SUBRULE($.numericType)\n    }, {\n      ALT: () => $.CONSUME(t.Boolean)\n    }]);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-4.html#jls-NumericType\n  $.RULE(\"numericType\", () => {\n    $.OR([{\n      ALT: () => $.SUBRULE($.integralType)\n    }, {\n      ALT: () => $.SUBRULE($.floatingPointType)\n    }]);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-4.html#jls-IntegralType\n  $.RULE(\"integralType\", () => {\n    $.OR([{\n      ALT: () => $.CONSUME(t.Byte)\n    }, {\n      ALT: () => $.CONSUME(t.Short)\n    }, {\n      ALT: () => $.CONSUME(t.Int)\n    }, {\n      ALT: () => $.CONSUME(t.Long)\n    }, {\n      ALT: () => $.CONSUME(t.Char)\n    }]);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-4.html#jls-FloatingPointType\n  $.RULE(\"floatingPointType\", () => {\n    $.OR([{\n      ALT: () => $.CONSUME(t.Float)\n    }, {\n      ALT: () => $.CONSUME(t.Double)\n    }]);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-4.html#jls-ReferenceType\n  $.RULE(\"referenceType\", () => {\n    $.MANY(() => {\n      // Spec Deviation: by extracting the common \"annotation\" prefix\n      // we can avoid backtracking and thus improve performance.\n      // Note that the annotation prefix is still present inside\n      // \"primitiveType\" and \"classOrInterfaceType\"\n      $.SUBRULE($.annotation);\n    });\n    // Spec Deviation: The array type \"dims\" suffix was extracted to this rule\n    // to avoid backtracking for performance reasons.\n    $.OR({\n      DEF: [{\n        ALT: () => {\n          $.SUBRULE($.primitiveType);\n          $.SUBRULE($.dims);\n        }\n      }, {\n        // Spec Deviation: \"typeVariable\" alternative is missing because\n        //                 it is included in \"classOrInterfaceType\"\n        ALT: () => {\n          $.SUBRULE($.classOrInterfaceType);\n          $.OPTION(() => {\n            $.SUBRULE2($.dims);\n          });\n        }\n      }],\n      IGNORE_AMBIGUITIES: true // annotation prefix was extracted to remove ambiguities\n    });\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-4.html#jls-ClassOrInterfaceType\n  $.RULE(\"classOrInterfaceType\", () => {\n    // Spec Deviation: The spec says: \"classType | interfaceType\" but \"interfaceType\"\n    //                 is not mentioned in the parser because it is identical to \"classType\"\n    //                 The distinction is **semantic** not syntactic.\n    $.SUBRULE($.classType);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-4.html#jls-ClassType\n  $.RULE(\"classType\", () => {\n    // Spec Deviation: Refactored left recursion and alternation to iterations\n    $.MANY(() => {\n      $.SUBRULE($.annotation);\n    });\n    $.CONSUME(t.Identifier);\n    $.OPTION(() => {\n      $.SUBRULE($.typeArguments);\n    });\n    $.MANY2(() => {\n      $.CONSUME(t.Dot);\n      $.MANY3(() => {\n        $.SUBRULE2($.annotation);\n      });\n      // TODO: Semantic Check: This Identifier cannot be \"var\"\n      $.CONSUME2(t.Identifier);\n      $.OPTION2({\n        // To avoid confusion with \"TypeArgumentsOrDiamond\" rule\n        // as we use the \"classType\" rule in the \"identifyNewExpressionType\"\n        // optimized lookahead rule.\n        GATE: () => tokenMatcher($.LA(2).tokenType, t.Greater) === false,\n        DEF: () => {\n          $.SUBRULE2($.typeArguments);\n        }\n      });\n    });\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-4.html#jls-InterfaceType\n  $.RULE(\"interfaceType\", () => {\n    $.SUBRULE($.classType);\n  });\n  $.RULE(\"typeVariable\", () => {\n    $.MANY(() => {\n      $.SUBRULE($.annotation);\n    });\n    // TODO: Semantic Check: This Identifier cannot be \"var\"\n    $.CONSUME(t.Identifier);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-4.html#jls-Dims\n  $.RULE(\"dims\", () => {\n    $.MANY(() => {\n      $.SUBRULE($.annotation);\n    });\n    $.CONSUME(t.LSquare);\n    $.CONSUME(t.RSquare);\n    $.MANY2({\n      GATE: () => $.BACKTRACK_LOOKAHEAD($.isDims),\n      DEF: () => {\n        $.MANY3(() => {\n          $.SUBRULE2($.annotation);\n        });\n        $.CONSUME2(t.LSquare);\n        $.CONSUME2(t.RSquare);\n      }\n    });\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-4.html#jls-TypeParameter\n  $.RULE(\"typeParameter\", () => {\n    $.MANY(() => {\n      $.SUBRULE($.typeParameterModifier);\n    });\n    $.SUBRULE($.typeIdentifier);\n    $.OPTION(() => {\n      $.SUBRULE($.typeBound);\n    });\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-4.html#jls-TypeParameterModifier\n  $.RULE(\"typeParameterModifier\", () => {\n    $.SUBRULE($.annotation);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-4.html#jls-TypeBound\n  $.RULE(\"typeBound\", () => {\n    $.CONSUME(t.Extends);\n    // Spec Deviation: The alternative with \"TypeVariable\" is not specified\n    //      because it's syntax is included in \"classOrInterfaceType\"\n    $.SUBRULE($.classOrInterfaceType);\n    $.MANY2(() => {\n      $.SUBRULE($.additionalBound);\n    });\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-4.html#jls-AdditionalBound\n  $.RULE(\"additionalBound\", () => {\n    $.CONSUME(t.And);\n    $.SUBRULE($.interfaceType);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-4.html#jls-TypeArguments\n  $.RULE(\"typeArguments\", () => {\n    $.CONSUME(t.Less);\n    $.SUBRULE($.typeArgumentList);\n    $.CONSUME(t.Greater);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-4.html#jls-TypeArgumentList\n  $.RULE(\"typeArgumentList\", () => {\n    $.SUBRULE($.typeArgument);\n    $.MANY(() => {\n      $.CONSUME(t.Comma);\n      $.SUBRULE2($.typeArgument);\n    });\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-4.html#jls-TypeArgument\n  $.RULE(\"typeArgument\", () => {\n    // TODO: performance: evaluate flipping the order of alternatives\n    $.OR([{\n      GATE: $.BACKTRACK($.referenceType),\n      ALT: () => $.SUBRULE($.referenceType)\n    }, {\n      ALT: () => $.SUBRULE($.wildcard)\n    }]);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-4.html#jls-Wildcard\n  $.RULE(\"wildcard\", () => {\n    $.MANY(() => {\n      $.SUBRULE($.annotation);\n    });\n    $.CONSUME(t.QuestionMark);\n    $.OPTION(() => {\n      $.SUBRULE($.wildcardBounds);\n    });\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-4.html#jls-WildcardBounds\n  $.RULE(\"wildcardBounds\", () => {\n    // TODO: consider in-lining suffix into the alternatives to match the spec more strongly\n    $.OR([{\n      ALT: () => $.CONSUME(t.Extends)\n    }, {\n      ALT: () => $.CONSUME(t.Super)\n    }]);\n    $.SUBRULE($.referenceType);\n  });\n}\nmodule.exports = {\n  defineRules\n};","map":{"version":3,"names":["tokenMatcher","require","defineRules","$","t","RULE","MANY","SUBRULE","annotation","OR","ALT","numericType","CONSUME","Boolean","integralType","floatingPointType","Byte","Short","Int","Long","Char","Float","Double","DEF","primitiveType","dims","classOrInterfaceType","OPTION","SUBRULE2","IGNORE_AMBIGUITIES","classType","Identifier","typeArguments","MANY2","Dot","MANY3","CONSUME2","OPTION2","GATE","LA","tokenType","Greater","LSquare","RSquare","BACKTRACK_LOOKAHEAD","isDims","typeParameterModifier","typeIdentifier","typeBound","Extends","additionalBound","And","interfaceType","Less","typeArgumentList","typeArgument","Comma","BACKTRACK","referenceType","wildcard","QuestionMark","wildcardBounds","Super","module","exports"],"sources":["/Users/duyenpnc/Desktop/tool-tu-lam/your-app-name/node_modules/java-parser/src/productions/types-values-and-variables.js"],"sourcesContent":["\"use strict\";\n\nconst { tokenMatcher } = require(\"chevrotain\");\n\nfunction defineRules($, t) {\n  // ---------------------\n  // Productions from ยง4 (Types, Values, and Variables)\n  // ---------------------\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-4.html#jls-PrimitiveType\n  $.RULE(\"primitiveType\", () => {\n    $.MANY(() => {\n      $.SUBRULE($.annotation);\n    });\n    $.OR([\n      { ALT: () => $.SUBRULE($.numericType) },\n      { ALT: () => $.CONSUME(t.Boolean) }\n    ]);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-4.html#jls-NumericType\n  $.RULE(\"numericType\", () => {\n    $.OR([\n      { ALT: () => $.SUBRULE($.integralType) },\n      { ALT: () => $.SUBRULE($.floatingPointType) }\n    ]);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-4.html#jls-IntegralType\n  $.RULE(\"integralType\", () => {\n    $.OR([\n      { ALT: () => $.CONSUME(t.Byte) },\n      { ALT: () => $.CONSUME(t.Short) },\n      { ALT: () => $.CONSUME(t.Int) },\n      { ALT: () => $.CONSUME(t.Long) },\n      { ALT: () => $.CONSUME(t.Char) }\n    ]);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-4.html#jls-FloatingPointType\n  $.RULE(\"floatingPointType\", () => {\n    $.OR([\n      { ALT: () => $.CONSUME(t.Float) },\n      { ALT: () => $.CONSUME(t.Double) }\n    ]);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-4.html#jls-ReferenceType\n  $.RULE(\"referenceType\", () => {\n    $.MANY(() => {\n      // Spec Deviation: by extracting the common \"annotation\" prefix\n      // we can avoid backtracking and thus improve performance.\n      // Note that the annotation prefix is still present inside\n      // \"primitiveType\" and \"classOrInterfaceType\"\n      $.SUBRULE($.annotation);\n    });\n    // Spec Deviation: The array type \"dims\" suffix was extracted to this rule\n    // to avoid backtracking for performance reasons.\n    $.OR({\n      DEF: [\n        {\n          ALT: () => {\n            $.SUBRULE($.primitiveType);\n            $.SUBRULE($.dims);\n          }\n        },\n        {\n          // Spec Deviation: \"typeVariable\" alternative is missing because\n          //                 it is included in \"classOrInterfaceType\"\n          ALT: () => {\n            $.SUBRULE($.classOrInterfaceType);\n            $.OPTION(() => {\n              $.SUBRULE2($.dims);\n            });\n          }\n        }\n      ],\n      IGNORE_AMBIGUITIES: true // annotation prefix was extracted to remove ambiguities\n    });\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-4.html#jls-ClassOrInterfaceType\n  $.RULE(\"classOrInterfaceType\", () => {\n    // Spec Deviation: The spec says: \"classType | interfaceType\" but \"interfaceType\"\n    //                 is not mentioned in the parser because it is identical to \"classType\"\n    //                 The distinction is **semantic** not syntactic.\n    $.SUBRULE($.classType);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-4.html#jls-ClassType\n  $.RULE(\"classType\", () => {\n    // Spec Deviation: Refactored left recursion and alternation to iterations\n    $.MANY(() => {\n      $.SUBRULE($.annotation);\n    });\n    $.CONSUME(t.Identifier);\n    $.OPTION(() => {\n      $.SUBRULE($.typeArguments);\n    });\n    $.MANY2(() => {\n      $.CONSUME(t.Dot);\n      $.MANY3(() => {\n        $.SUBRULE2($.annotation);\n      });\n      // TODO: Semantic Check: This Identifier cannot be \"var\"\n      $.CONSUME2(t.Identifier);\n      $.OPTION2({\n        // To avoid confusion with \"TypeArgumentsOrDiamond\" rule\n        // as we use the \"classType\" rule in the \"identifyNewExpressionType\"\n        // optimized lookahead rule.\n        GATE: () => tokenMatcher($.LA(2).tokenType, t.Greater) === false,\n        DEF: () => {\n          $.SUBRULE2($.typeArguments);\n        }\n      });\n    });\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-4.html#jls-InterfaceType\n  $.RULE(\"interfaceType\", () => {\n    $.SUBRULE($.classType);\n  });\n\n  $.RULE(\"typeVariable\", () => {\n    $.MANY(() => {\n      $.SUBRULE($.annotation);\n    });\n    // TODO: Semantic Check: This Identifier cannot be \"var\"\n    $.CONSUME(t.Identifier);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-4.html#jls-Dims\n  $.RULE(\"dims\", () => {\n    $.MANY(() => {\n      $.SUBRULE($.annotation);\n    });\n    $.CONSUME(t.LSquare);\n    $.CONSUME(t.RSquare);\n    $.MANY2({\n      GATE: () => $.BACKTRACK_LOOKAHEAD($.isDims),\n      DEF: () => {\n        $.MANY3(() => {\n          $.SUBRULE2($.annotation);\n        });\n        $.CONSUME2(t.LSquare);\n        $.CONSUME2(t.RSquare);\n      }\n    });\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-4.html#jls-TypeParameter\n  $.RULE(\"typeParameter\", () => {\n    $.MANY(() => {\n      $.SUBRULE($.typeParameterModifier);\n    });\n    $.SUBRULE($.typeIdentifier);\n    $.OPTION(() => {\n      $.SUBRULE($.typeBound);\n    });\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-4.html#jls-TypeParameterModifier\n  $.RULE(\"typeParameterModifier\", () => {\n    $.SUBRULE($.annotation);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-4.html#jls-TypeBound\n  $.RULE(\"typeBound\", () => {\n    $.CONSUME(t.Extends);\n    // Spec Deviation: The alternative with \"TypeVariable\" is not specified\n    //      because it's syntax is included in \"classOrInterfaceType\"\n    $.SUBRULE($.classOrInterfaceType);\n    $.MANY2(() => {\n      $.SUBRULE($.additionalBound);\n    });\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-4.html#jls-AdditionalBound\n  $.RULE(\"additionalBound\", () => {\n    $.CONSUME(t.And);\n    $.SUBRULE($.interfaceType);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-4.html#jls-TypeArguments\n  $.RULE(\"typeArguments\", () => {\n    $.CONSUME(t.Less);\n    $.SUBRULE($.typeArgumentList);\n    $.CONSUME(t.Greater);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-4.html#jls-TypeArgumentList\n  $.RULE(\"typeArgumentList\", () => {\n    $.SUBRULE($.typeArgument);\n    $.MANY(() => {\n      $.CONSUME(t.Comma);\n      $.SUBRULE2($.typeArgument);\n    });\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-4.html#jls-TypeArgument\n  $.RULE(\"typeArgument\", () => {\n    // TODO: performance: evaluate flipping the order of alternatives\n    $.OR([\n      {\n        GATE: $.BACKTRACK($.referenceType),\n        ALT: () => $.SUBRULE($.referenceType)\n      },\n      { ALT: () => $.SUBRULE($.wildcard) }\n    ]);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-4.html#jls-Wildcard\n  $.RULE(\"wildcard\", () => {\n    $.MANY(() => {\n      $.SUBRULE($.annotation);\n    });\n    $.CONSUME(t.QuestionMark);\n    $.OPTION(() => {\n      $.SUBRULE($.wildcardBounds);\n    });\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-4.html#jls-WildcardBounds\n  $.RULE(\"wildcardBounds\", () => {\n    // TODO: consider in-lining suffix into the alternatives to match the spec more strongly\n    $.OR([\n      { ALT: () => $.CONSUME(t.Extends) },\n      { ALT: () => $.CONSUME(t.Super) }\n    ]);\n    $.SUBRULE($.referenceType);\n  });\n}\n\nmodule.exports = {\n  defineRules\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAM;EAAEA;AAAa,CAAC,GAAGC,OAAO,CAAC,YAAY,CAAC;AAE9C,SAASC,WAAWA,CAACC,CAAC,EAAEC,CAAC,EAAE;EACzB;EACA;EACA;;EAEA;EACAD,CAAC,CAACE,IAAI,CAAC,eAAe,EAAE,MAAM;IAC5BF,CAAC,CAACG,IAAI,CAAC,MAAM;MACXH,CAAC,CAACI,OAAO,CAACJ,CAAC,CAACK,UAAU,CAAC;IACzB,CAAC,CAAC;IACFL,CAAC,CAACM,EAAE,CAAC,CACH;MAAEC,GAAG,EAAEA,CAAA,KAAMP,CAAC,CAACI,OAAO,CAACJ,CAAC,CAACQ,WAAW;IAAE,CAAC,EACvC;MAAED,GAAG,EAAEA,CAAA,KAAMP,CAAC,CAACS,OAAO,CAACR,CAAC,CAACS,OAAO;IAAE,CAAC,CACpC,CAAC;EACJ,CAAC,CAAC;;EAEF;EACAV,CAAC,CAACE,IAAI,CAAC,aAAa,EAAE,MAAM;IAC1BF,CAAC,CAACM,EAAE,CAAC,CACH;MAAEC,GAAG,EAAEA,CAAA,KAAMP,CAAC,CAACI,OAAO,CAACJ,CAAC,CAACW,YAAY;IAAE,CAAC,EACxC;MAAEJ,GAAG,EAAEA,CAAA,KAAMP,CAAC,CAACI,OAAO,CAACJ,CAAC,CAACY,iBAAiB;IAAE,CAAC,CAC9C,CAAC;EACJ,CAAC,CAAC;;EAEF;EACAZ,CAAC,CAACE,IAAI,CAAC,cAAc,EAAE,MAAM;IAC3BF,CAAC,CAACM,EAAE,CAAC,CACH;MAAEC,GAAG,EAAEA,CAAA,KAAMP,CAAC,CAACS,OAAO,CAACR,CAAC,CAACY,IAAI;IAAE,CAAC,EAChC;MAAEN,GAAG,EAAEA,CAAA,KAAMP,CAAC,CAACS,OAAO,CAACR,CAAC,CAACa,KAAK;IAAE,CAAC,EACjC;MAAEP,GAAG,EAAEA,CAAA,KAAMP,CAAC,CAACS,OAAO,CAACR,CAAC,CAACc,GAAG;IAAE,CAAC,EAC/B;MAAER,GAAG,EAAEA,CAAA,KAAMP,CAAC,CAACS,OAAO,CAACR,CAAC,CAACe,IAAI;IAAE,CAAC,EAChC;MAAET,GAAG,EAAEA,CAAA,KAAMP,CAAC,CAACS,OAAO,CAACR,CAAC,CAACgB,IAAI;IAAE,CAAC,CACjC,CAAC;EACJ,CAAC,CAAC;;EAEF;EACAjB,CAAC,CAACE,IAAI,CAAC,mBAAmB,EAAE,MAAM;IAChCF,CAAC,CAACM,EAAE,CAAC,CACH;MAAEC,GAAG,EAAEA,CAAA,KAAMP,CAAC,CAACS,OAAO,CAACR,CAAC,CAACiB,KAAK;IAAE,CAAC,EACjC;MAAEX,GAAG,EAAEA,CAAA,KAAMP,CAAC,CAACS,OAAO,CAACR,CAAC,CAACkB,MAAM;IAAE,CAAC,CACnC,CAAC;EACJ,CAAC,CAAC;;EAEF;EACAnB,CAAC,CAACE,IAAI,CAAC,eAAe,EAAE,MAAM;IAC5BF,CAAC,CAACG,IAAI,CAAC,MAAM;MACX;MACA;MACA;MACA;MACAH,CAAC,CAACI,OAAO,CAACJ,CAAC,CAACK,UAAU,CAAC;IACzB,CAAC,CAAC;IACF;IACA;IACAL,CAAC,CAACM,EAAE,CAAC;MACHc,GAAG,EAAE,CACH;QACEb,GAAG,EAAEA,CAAA,KAAM;UACTP,CAAC,CAACI,OAAO,CAACJ,CAAC,CAACqB,aAAa,CAAC;UAC1BrB,CAAC,CAACI,OAAO,CAACJ,CAAC,CAACsB,IAAI,CAAC;QACnB;MACF,CAAC,EACD;QACE;QACA;QACAf,GAAG,EAAEA,CAAA,KAAM;UACTP,CAAC,CAACI,OAAO,CAACJ,CAAC,CAACuB,oBAAoB,CAAC;UACjCvB,CAAC,CAACwB,MAAM,CAAC,MAAM;YACbxB,CAAC,CAACyB,QAAQ,CAACzB,CAAC,CAACsB,IAAI,CAAC;UACpB,CAAC,CAAC;QACJ;MACF,CAAC,CACF;MACDI,kBAAkB,EAAE,IAAI,CAAC;IAC3B,CAAC,CAAC;EACJ,CAAC,CAAC;;EAEF;EACA1B,CAAC,CAACE,IAAI,CAAC,sBAAsB,EAAE,MAAM;IACnC;IACA;IACA;IACAF,CAAC,CAACI,OAAO,CAACJ,CAAC,CAAC2B,SAAS,CAAC;EACxB,CAAC,CAAC;;EAEF;EACA3B,CAAC,CAACE,IAAI,CAAC,WAAW,EAAE,MAAM;IACxB;IACAF,CAAC,CAACG,IAAI,CAAC,MAAM;MACXH,CAAC,CAACI,OAAO,CAACJ,CAAC,CAACK,UAAU,CAAC;IACzB,CAAC,CAAC;IACFL,CAAC,CAACS,OAAO,CAACR,CAAC,CAAC2B,UAAU,CAAC;IACvB5B,CAAC,CAACwB,MAAM,CAAC,MAAM;MACbxB,CAAC,CAACI,OAAO,CAACJ,CAAC,CAAC6B,aAAa,CAAC;IAC5B,CAAC,CAAC;IACF7B,CAAC,CAAC8B,KAAK,CAAC,MAAM;MACZ9B,CAAC,CAACS,OAAO,CAACR,CAAC,CAAC8B,GAAG,CAAC;MAChB/B,CAAC,CAACgC,KAAK,CAAC,MAAM;QACZhC,CAAC,CAACyB,QAAQ,CAACzB,CAAC,CAACK,UAAU,CAAC;MAC1B,CAAC,CAAC;MACF;MACAL,CAAC,CAACiC,QAAQ,CAAChC,CAAC,CAAC2B,UAAU,CAAC;MACxB5B,CAAC,CAACkC,OAAO,CAAC;QACR;QACA;QACA;QACAC,IAAI,EAAEA,CAAA,KAAMtC,YAAY,CAACG,CAAC,CAACoC,EAAE,CAAC,CAAC,CAAC,CAACC,SAAS,EAAEpC,CAAC,CAACqC,OAAO,CAAC,KAAK,KAAK;QAChElB,GAAG,EAAEA,CAAA,KAAM;UACTpB,CAAC,CAACyB,QAAQ,CAACzB,CAAC,CAAC6B,aAAa,CAAC;QAC7B;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,CAAC;;EAEF;EACA7B,CAAC,CAACE,IAAI,CAAC,eAAe,EAAE,MAAM;IAC5BF,CAAC,CAACI,OAAO,CAACJ,CAAC,CAAC2B,SAAS,CAAC;EACxB,CAAC,CAAC;EAEF3B,CAAC,CAACE,IAAI,CAAC,cAAc,EAAE,MAAM;IAC3BF,CAAC,CAACG,IAAI,CAAC,MAAM;MACXH,CAAC,CAACI,OAAO,CAACJ,CAAC,CAACK,UAAU,CAAC;IACzB,CAAC,CAAC;IACF;IACAL,CAAC,CAACS,OAAO,CAACR,CAAC,CAAC2B,UAAU,CAAC;EACzB,CAAC,CAAC;;EAEF;EACA5B,CAAC,CAACE,IAAI,CAAC,MAAM,EAAE,MAAM;IACnBF,CAAC,CAACG,IAAI,CAAC,MAAM;MACXH,CAAC,CAACI,OAAO,CAACJ,CAAC,CAACK,UAAU,CAAC;IACzB,CAAC,CAAC;IACFL,CAAC,CAACS,OAAO,CAACR,CAAC,CAACsC,OAAO,CAAC;IACpBvC,CAAC,CAACS,OAAO,CAACR,CAAC,CAACuC,OAAO,CAAC;IACpBxC,CAAC,CAAC8B,KAAK,CAAC;MACNK,IAAI,EAAEA,CAAA,KAAMnC,CAAC,CAACyC,mBAAmB,CAACzC,CAAC,CAAC0C,MAAM,CAAC;MAC3CtB,GAAG,EAAEA,CAAA,KAAM;QACTpB,CAAC,CAACgC,KAAK,CAAC,MAAM;UACZhC,CAAC,CAACyB,QAAQ,CAACzB,CAAC,CAACK,UAAU,CAAC;QAC1B,CAAC,CAAC;QACFL,CAAC,CAACiC,QAAQ,CAAChC,CAAC,CAACsC,OAAO,CAAC;QACrBvC,CAAC,CAACiC,QAAQ,CAAChC,CAAC,CAACuC,OAAO,CAAC;MACvB;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;;EAEF;EACAxC,CAAC,CAACE,IAAI,CAAC,eAAe,EAAE,MAAM;IAC5BF,CAAC,CAACG,IAAI,CAAC,MAAM;MACXH,CAAC,CAACI,OAAO,CAACJ,CAAC,CAAC2C,qBAAqB,CAAC;IACpC,CAAC,CAAC;IACF3C,CAAC,CAACI,OAAO,CAACJ,CAAC,CAAC4C,cAAc,CAAC;IAC3B5C,CAAC,CAACwB,MAAM,CAAC,MAAM;MACbxB,CAAC,CAACI,OAAO,CAACJ,CAAC,CAAC6C,SAAS,CAAC;IACxB,CAAC,CAAC;EACJ,CAAC,CAAC;;EAEF;EACA7C,CAAC,CAACE,IAAI,CAAC,uBAAuB,EAAE,MAAM;IACpCF,CAAC,CAACI,OAAO,CAACJ,CAAC,CAACK,UAAU,CAAC;EACzB,CAAC,CAAC;;EAEF;EACAL,CAAC,CAACE,IAAI,CAAC,WAAW,EAAE,MAAM;IACxBF,CAAC,CAACS,OAAO,CAACR,CAAC,CAAC6C,OAAO,CAAC;IACpB;IACA;IACA9C,CAAC,CAACI,OAAO,CAACJ,CAAC,CAACuB,oBAAoB,CAAC;IACjCvB,CAAC,CAAC8B,KAAK,CAAC,MAAM;MACZ9B,CAAC,CAACI,OAAO,CAACJ,CAAC,CAAC+C,eAAe,CAAC;IAC9B,CAAC,CAAC;EACJ,CAAC,CAAC;;EAEF;EACA/C,CAAC,CAACE,IAAI,CAAC,iBAAiB,EAAE,MAAM;IAC9BF,CAAC,CAACS,OAAO,CAACR,CAAC,CAAC+C,GAAG,CAAC;IAChBhD,CAAC,CAACI,OAAO,CAACJ,CAAC,CAACiD,aAAa,CAAC;EAC5B,CAAC,CAAC;;EAEF;EACAjD,CAAC,CAACE,IAAI,CAAC,eAAe,EAAE,MAAM;IAC5BF,CAAC,CAACS,OAAO,CAACR,CAAC,CAACiD,IAAI,CAAC;IACjBlD,CAAC,CAACI,OAAO,CAACJ,CAAC,CAACmD,gBAAgB,CAAC;IAC7BnD,CAAC,CAACS,OAAO,CAACR,CAAC,CAACqC,OAAO,CAAC;EACtB,CAAC,CAAC;;EAEF;EACAtC,CAAC,CAACE,IAAI,CAAC,kBAAkB,EAAE,MAAM;IAC/BF,CAAC,CAACI,OAAO,CAACJ,CAAC,CAACoD,YAAY,CAAC;IACzBpD,CAAC,CAACG,IAAI,CAAC,MAAM;MACXH,CAAC,CAACS,OAAO,CAACR,CAAC,CAACoD,KAAK,CAAC;MAClBrD,CAAC,CAACyB,QAAQ,CAACzB,CAAC,CAACoD,YAAY,CAAC;IAC5B,CAAC,CAAC;EACJ,CAAC,CAAC;;EAEF;EACApD,CAAC,CAACE,IAAI,CAAC,cAAc,EAAE,MAAM;IAC3B;IACAF,CAAC,CAACM,EAAE,CAAC,CACH;MACE6B,IAAI,EAAEnC,CAAC,CAACsD,SAAS,CAACtD,CAAC,CAACuD,aAAa,CAAC;MAClChD,GAAG,EAAEA,CAAA,KAAMP,CAAC,CAACI,OAAO,CAACJ,CAAC,CAACuD,aAAa;IACtC,CAAC,EACD;MAAEhD,GAAG,EAAEA,CAAA,KAAMP,CAAC,CAACI,OAAO,CAACJ,CAAC,CAACwD,QAAQ;IAAE,CAAC,CACrC,CAAC;EACJ,CAAC,CAAC;;EAEF;EACAxD,CAAC,CAACE,IAAI,CAAC,UAAU,EAAE,MAAM;IACvBF,CAAC,CAACG,IAAI,CAAC,MAAM;MACXH,CAAC,CAACI,OAAO,CAACJ,CAAC,CAACK,UAAU,CAAC;IACzB,CAAC,CAAC;IACFL,CAAC,CAACS,OAAO,CAACR,CAAC,CAACwD,YAAY,CAAC;IACzBzD,CAAC,CAACwB,MAAM,CAAC,MAAM;MACbxB,CAAC,CAACI,OAAO,CAACJ,CAAC,CAAC0D,cAAc,CAAC;IAC7B,CAAC,CAAC;EACJ,CAAC,CAAC;;EAEF;EACA1D,CAAC,CAACE,IAAI,CAAC,gBAAgB,EAAE,MAAM;IAC7B;IACAF,CAAC,CAACM,EAAE,CAAC,CACH;MAAEC,GAAG,EAAEA,CAAA,KAAMP,CAAC,CAACS,OAAO,CAACR,CAAC,CAAC6C,OAAO;IAAE,CAAC,EACnC;MAAEvC,GAAG,EAAEA,CAAA,KAAMP,CAAC,CAACS,OAAO,CAACR,CAAC,CAAC0D,KAAK;IAAE,CAAC,CAClC,CAAC;IACF3D,CAAC,CAACI,OAAO,CAACJ,CAAC,CAACuD,aAAa,CAAC;EAC5B,CAAC,CAAC;AACJ;AAEAK,MAAM,CAACC,OAAO,GAAG;EACf9D;AACF,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}