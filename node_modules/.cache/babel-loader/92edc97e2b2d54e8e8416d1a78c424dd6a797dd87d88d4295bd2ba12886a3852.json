{"ast":null,"code":"var _jsxFileName = \"/Users/duyenpnc/Desktop/tool-tu-lam/generate-lld/src/GenTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport queryString from \"query-string\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JsonTable1 = () => {\n  _s();\n  const [queryStringData, setQueryStringData] = useState(\"\");\n  const [tableData, setTableData] = useState([]);\n  useEffect(() => {\n    parseQueryString();\n  }, [queryStringData]);\n  const parseQueryString = () => {\n    try {\n      const parsedData = queryString.parse(queryStringData);\n      const tableRows = Object.entries(parsedData).map(([key, value], index) => ({\n        stt: index + 1,\n        attribute: key,\n        dataType: typeof value === \"string\" ? \"string\" : \"unknown\",\n        // Adjust based on your needs\n        description: \"\",\n        required: 'N',\n        value: value\n      }));\n      setTableData(tableRows);\n    } catch (error) {\n      console.error(\"Invalid query string format\", error);\n      setTableData([]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      rows: 10,\n      cols: 40,\n      value: queryStringData,\n      onChange: e => setQueryStringData(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: parseQueryString,\n      children: \"Generate Table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"STT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Attribute\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"DataType\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Value\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: tableData.map(row => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.stt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.attribute\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.dataType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.required\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)]\n        }, row.stt, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(JsonTable1, \"zBR0K02kt3FEgwm6TpcuykUoQhw=\");\n_c = JsonTable1;\nexport default JsonTable1;\nvar _c;\n$RefreshReg$(_c, \"JsonTable1\");","map":{"version":3,"names":["React","useState","useEffect","queryString","jsxDEV","_jsxDEV","JsonTable1","_s","queryStringData","setQueryStringData","tableData","setTableData","parseQueryString","parsedData","parse","tableRows","Object","entries","map","key","value","index","stt","attribute","dataType","description","required","error","console","children","rows","cols","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","row","_c","$RefreshReg$"],"sources":["/Users/duyenpnc/Desktop/tool-tu-lam/generate-lld/src/GenTable.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport queryString from \"query-string\";\r\n\r\nconst JsonTable1 = () => {\r\n  const [queryStringData, setQueryStringData] = useState(\"\");\r\n  const [tableData, setTableData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    parseQueryString();\r\n  }, [queryStringData]);\r\n\r\n  const parseQueryString = () => {\r\n    try {\r\n      const parsedData = queryString.parse(queryStringData);\r\n      const tableRows = Object.entries(parsedData).map(([key, value], index) => ({\r\n        stt: index + 1,\r\n        attribute: key,\r\n        dataType: typeof value === \"string\" ? \"string\" : \"unknown\", // Adjust based on your needs\r\n        description: \"\",\r\n        required: 'N',\r\n        value: value,\r\n      }));\r\n      setTableData(tableRows);\r\n    } catch (error) {\r\n      console.error(\"Invalid query string format\", error);\r\n      setTableData([]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <textarea\r\n        rows={10}\r\n        cols={40}\r\n        value={queryStringData}\r\n        onChange={(e) => setQueryStringData(e.target.value)}\r\n      />\r\n      <br />\r\n      <button onClick={parseQueryString}>Generate Table</button>\r\n\r\n      {/* Display your table or other components based on tableData */}\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>STT</th>\r\n            <th>Attribute</th>\r\n            <th>DataType</th>\r\n            <th>Description</th>\r\n            <th>Required</th>\r\n            <th>Value</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {tableData.map((row) => (\r\n            <tr key={row.stt}>\r\n              <td>{row.stt}</td>\r\n              <td>{row.attribute}</td>\r\n              <td>{row.dataType}</td>\r\n              <td>{row.description}</td>\r\n              <td>{row.required}</td>\r\n              <td>{row.value}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JsonTable1;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}