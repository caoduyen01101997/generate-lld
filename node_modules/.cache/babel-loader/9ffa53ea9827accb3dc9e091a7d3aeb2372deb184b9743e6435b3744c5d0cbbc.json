{"ast":null,"code":"\"use strict\";\n\nconst {\n  tokenMatcher\n} = require(\"chevrotain\");\nfunction defineRules($, t) {\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-6.html#jls-ModuleName\n  $.RULE(\"moduleName\", () => {\n    $.CONSUME(t.Identifier);\n    $.MANY(() => {\n      $.CONSUME(t.Dot);\n      $.CONSUME2(t.Identifier);\n    });\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-6.html#jls-PackageName\n  $.RULE(\"packageName\", () => {\n    $.CONSUME(t.Identifier);\n    $.MANY(() => {\n      $.CONSUME(t.Dot);\n      $.CONSUME2(t.Identifier);\n    });\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-6.html#jls-TypeName\n  $.RULE(\"typeName\", () => {\n    // Spec Deviation: The last Identifier in a \"typeName\" may not be be \"var\"\n    //                 But the parser does not check for that.\n    // TODO: post parsing semantic check: last \"Identifier\" in a \"typeName\"\n    //                                    cannot be the \"var\" keyword\n    // TODO: option 2 implement \"Not Var\" Ident using token categories?\n    $.CONSUME(t.Identifier);\n    $.MANY(() => {\n      $.CONSUME(t.Dot);\n      $.CONSUME2(t.Identifier);\n    });\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-6.html#jls-ExpressionName\n  $.RULE(\"expressionName\", () => {\n    // Spec Deviation: in-lined \"ambiguousName\" to be LL(K)\n    $.CONSUME(t.Identifier);\n    $.MANY({\n      // expressionName could be called by \"qualifiedExplicitConstructorInvocation\"\n      // in that case it may be followed by \".super\" so we need to look two tokens\n      // ahead.\n      GATE: () => tokenMatcher(this.LA(2).tokenType, t.Identifier),\n      DEF: () => {\n        $.CONSUME(t.Dot);\n        $.CONSUME2(t.Identifier);\n      }\n    });\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-6.html#jls-MethodName\n  $.RULE(\"methodName\", () => {\n    $.CONSUME(t.Identifier);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-6.html#jls-PackageOrTypeName\n  $.RULE(\"packageOrTypeName\", () => {\n    $.CONSUME(t.Identifier);\n    $.MANY({\n      // In some contexts a \"Dot Star\" (.*) may appear\n      // after a \"packageOrTypeName\", by default Chevrotain will\n      // only look a single token ahead (Dot) to determine if another iteration\n      // exists which will cause a parsing error for inputs such as:\n      // \"import a.b.c.*\"\n      GATE: () => tokenMatcher(this.LA(2).tokenType, t.Star) === false,\n      DEF: () => {\n        $.CONSUME(t.Dot);\n        $.CONSUME2(t.Identifier);\n      }\n    });\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-6.html#jls-AmbiguousName\n  $.RULE(\"ambiguousName\", () => {\n    $.CONSUME(t.Identifier);\n    $.MANY(() => {\n      $.CONSUME(t.Dot);\n      $.CONSUME2(t.Identifier);\n    });\n  });\n}\nmodule.exports = {\n  defineRules\n};","map":{"version":3,"names":["tokenMatcher","require","defineRules","$","t","RULE","CONSUME","Identifier","MANY","Dot","CONSUME2","GATE","LA","tokenType","DEF","Star","module","exports"],"sources":["/Users/duyenpnc/Desktop/tool-tu-lam/your-app-name/node_modules/java-parser/src/productions/names.js"],"sourcesContent":["\"use strict\";\nconst { tokenMatcher } = require(\"chevrotain\");\nfunction defineRules($, t) {\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-6.html#jls-ModuleName\n  $.RULE(\"moduleName\", () => {\n    $.CONSUME(t.Identifier);\n    $.MANY(() => {\n      $.CONSUME(t.Dot);\n      $.CONSUME2(t.Identifier);\n    });\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-6.html#jls-PackageName\n  $.RULE(\"packageName\", () => {\n    $.CONSUME(t.Identifier);\n    $.MANY(() => {\n      $.CONSUME(t.Dot);\n      $.CONSUME2(t.Identifier);\n    });\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-6.html#jls-TypeName\n  $.RULE(\"typeName\", () => {\n    // Spec Deviation: The last Identifier in a \"typeName\" may not be be \"var\"\n    //                 But the parser does not check for that.\n    // TODO: post parsing semantic check: last \"Identifier\" in a \"typeName\"\n    //                                    cannot be the \"var\" keyword\n    // TODO: option 2 implement \"Not Var\" Ident using token categories?\n    $.CONSUME(t.Identifier);\n    $.MANY(() => {\n      $.CONSUME(t.Dot);\n      $.CONSUME2(t.Identifier);\n    });\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-6.html#jls-ExpressionName\n  $.RULE(\"expressionName\", () => {\n    // Spec Deviation: in-lined \"ambiguousName\" to be LL(K)\n    $.CONSUME(t.Identifier);\n    $.MANY({\n      // expressionName could be called by \"qualifiedExplicitConstructorInvocation\"\n      // in that case it may be followed by \".super\" so we need to look two tokens\n      // ahead.\n      GATE: () => tokenMatcher(this.LA(2).tokenType, t.Identifier),\n      DEF: () => {\n        $.CONSUME(t.Dot);\n        $.CONSUME2(t.Identifier);\n      }\n    });\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-6.html#jls-MethodName\n  $.RULE(\"methodName\", () => {\n    $.CONSUME(t.Identifier);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-6.html#jls-PackageOrTypeName\n  $.RULE(\"packageOrTypeName\", () => {\n    $.CONSUME(t.Identifier);\n    $.MANY({\n      // In some contexts a \"Dot Star\" (.*) may appear\n      // after a \"packageOrTypeName\", by default Chevrotain will\n      // only look a single token ahead (Dot) to determine if another iteration\n      // exists which will cause a parsing error for inputs such as:\n      // \"import a.b.c.*\"\n      GATE: () => tokenMatcher(this.LA(2).tokenType, t.Star) === false,\n      DEF: () => {\n        $.CONSUME(t.Dot);\n        $.CONSUME2(t.Identifier);\n      }\n    });\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-6.html#jls-AmbiguousName\n  $.RULE(\"ambiguousName\", () => {\n    $.CONSUME(t.Identifier);\n    $.MANY(() => {\n      $.CONSUME(t.Dot);\n      $.CONSUME2(t.Identifier);\n    });\n  });\n}\n\nmodule.exports = {\n  defineRules\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}