{"ast":null,"code":"var _jsxFileName = \"/Users/duyenpnc/Desktop/tool-tu-lam/generate-lld/src/genTableParam.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport queryString from \"query-string\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JsonTable1 = () => {\n  _s();\n  const [urlData, setUrlData] = useState(\"\");\n  const [tableData, setTableData] = useState([]);\n  useEffect(() => {\n    parseUrl();\n  }, [urlData]);\n  const parseUrl = () => {\n    try {\n      const url = new URL(urlData);\n      const queryParams = queryString.parse(url.search);\n      const tableRows = Object.keys(queryParams).map((key, index) => ({\n        stt: index + 1,\n        attribute: key,\n        dataType: typeof queryParams[key],\n        description: \"\",\n        required: \"N\"\n      }));\n      setTableData(tableRows);\n    } catch (error) {\n      console.error(\"Invalid URL format\", error);\n      setTableData([]);\n    }\n  };\n  const copyToClipboard = () => {\n    const tableAsText = tableData.map(row => {\n      const {\n        stt,\n        ...rowDataWithoutStt\n      } = row;\n      return rowDataWithoutStt;\n    });\n    navigator.clipboard.writeText(JSON.stringify(tableAsText, null, 2)).then(() => {\n      console.log('Table data copied to clipboard');\n    }).catch(error => {\n      console.error('Error copying to clipboard', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      rows: 10,\n      cols: 40,\n      value: urlData,\n      onChange: e => setUrlData(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: parseUrl,\n      children: \"Generate Table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: copyToClipboard,\n      children: \"Copy Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"STT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Attribute\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"DataType\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: tableData.map(row => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.stt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.attribute\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.dataType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.required\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)]\n        }, row.stt, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(JsonTable1, \"tyLJsjUYohLoCMMZ3oxrFt+5zyM=\");\n_c = JsonTable1;\nexport default JsonTable1;\nvar _c;\n$RefreshReg$(_c, \"JsonTable1\");","map":{"version":3,"names":["React","useState","useEffect","queryString","jsxDEV","_jsxDEV","JsonTable1","_s","urlData","setUrlData","tableData","setTableData","parseUrl","url","URL","queryParams","parse","search","tableRows","Object","keys","map","key","index","stt","attribute","dataType","description","required","error","console","copyToClipboard","tableAsText","row","rowDataWithoutStt","navigator","clipboard","writeText","JSON","stringify","then","log","catch","children","rows","cols","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/duyenpnc/Desktop/tool-tu-lam/generate-lld/src/genTableParam.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport queryString from \"query-string\";\n\nconst JsonTable1 = () => {\n  const [urlData, setUrlData] = useState(\"\");\n  const [tableData, setTableData] = useState([]);\n\n  useEffect(() => {\n    parseUrl();\n  }, [urlData]);\n\n  const parseUrl = () => {\n    try {\n      const url = new URL(urlData);\n      const queryParams = queryString.parse(url.search);\n\n      const tableRows = Object.keys(queryParams).map((key, index) => ({\n        stt: index + 1,\n        attribute: key,\n        dataType: typeof queryParams[key],\n        description: \"\",\n        required: \"N\"\n      }));\n\n      setTableData(tableRows);\n    } catch (error) {\n      console.error(\"Invalid URL format\", error);\n      setTableData([]);\n    }\n  };\n\n  const copyToClipboard = () => {\n    const tableAsText = tableData.map((row) => {\n      const { stt, ...rowDataWithoutStt } = row;\n      return rowDataWithoutStt;\n    });\n\n    navigator.clipboard.writeText(JSON.stringify(tableAsText, null, 2)).then(() => {\n      console.log('Table data copied to clipboard');\n    }).catch((error) => {\n      console.error('Error copying to clipboard', error);\n    });\n  };\n\n  return (\n    <div>\n      <textarea\n        rows={10}\n        cols={40}\n        value={urlData}\n        onChange={(e) => setUrlData(e.target.value)}\n      />\n      <br />\n      <button onClick={parseUrl}>Generate Table</button>\n      <button onClick={copyToClipboard}>Copy Data</button>\n\n      {/* Display your table or other components based on tableData */}\n      <table>\n        <thead>\n          <tr>\n            <th>STT</th>\n            <th>Attribute</th>\n            <th>DataType</th>\n            <th>Description</th>\n            <th>Required</th>\n          </tr>\n        </thead>\n        <tbody>\n          {tableData.map((row) => (\n            <tr key={row.stt}>\n              <td>{row.stt}</td>\n              <td>{row.attribute}</td>\n              <td>{row.dataType}</td>\n              <td>{row.description}</td>\n              <td>{row.required}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default JsonTable1;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}