{"ast":null,"code":"var _jsxFileName = \"D:\\\\sourcecode\\\\create-json-type\\\\your-app\\\\generate-lld\\\\src\\\\GenTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JsonTable = () => {\n  _s();\n  const [jsonData, setJsonData] = useState('');\n  const [tableData, setTableData] = useState([]);\n  const [copiedData, setCopiedData] = useState('');\n  const parseJson = () => {\n    try {\n      const parsedData = JSON.parse(jsonData);\n      const tableRows = Object.entries(parsedData).map(([key, value], index) => ({\n        stt: index + 1,\n        attribute: key,\n        dataType: typeof value,\n        description: '',\n        required: 'N'\n      }));\n      setTableData(tableRows);\n    } catch (error) {\n      console.error('Invalid JSON format', error);\n      setTableData([]);\n    }\n  };\n  const copyToClipboard = () => {\n    const tableContent = tableData.map(row => `${row.attribute}\\t${row.dataType}\\t${row.description}\\t${row.required}\\n`);\n    const clipboardData = tableContent.join('');\n\n    // Create a textarea element, set its value to clipboardData, and trigger a copy\n    const textarea = document.createElement('textarea');\n    textarea.value = clipboardData;\n    document.body.appendChild(textarea);\n    textarea.select();\n    document.execCommand('copy');\n    document.body.removeChild(textarea);\n    setCopiedData(clipboardData);\n    alert('Table data copied to clipboard!');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      rows: \"5\",\n      cols: \"50\",\n      value: jsonData,\n      onChange: e => setJsonData(e.target.value),\n      placeholder: \"Enter JSON here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: parseJson,\n      children: \"Generate Table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: copyToClipboard,\n      children: \"Copy to Clipboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"STT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Attribute\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Data Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: tableData.map(row => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.stt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.attribute\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.dataType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: row.description,\n              onChange: e => {\n                const updatedData = [...tableData];\n                updatedData.find(item => item.attribute === row.attribute).description = e.target.value;\n                setTableData(updatedData);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.required\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)]\n        }, row.attribute, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), copiedData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Copied Data:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: copiedData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(JsonTable, \"TMa6kEIFp3zQtDDJYizH3cDrOsQ=\");\n_c = JsonTable;\nexport default JsonTable;\nvar _c;\n$RefreshReg$(_c, \"JsonTable\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","JsonTable","_s","jsonData","setJsonData","tableData","setTableData","copiedData","setCopiedData","parseJson","parsedData","JSON","parse","tableRows","Object","entries","map","key","value","index","stt","attribute","dataType","description","required","error","console","copyToClipboard","tableContent","row","clipboardData","join","textarea","document","createElement","body","appendChild","select","execCommand","removeChild","alert","children","rows","cols","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","border","type","updatedData","find","item","_c","$RefreshReg$"],"sources":["D:/sourcecode/create-json-type/your-app/generate-lld/src/GenTable.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst JsonTable = () => {\r\n  const [jsonData, setJsonData] = useState('');\r\n  const [tableData, setTableData] = useState([]);\r\n  const [copiedData, setCopiedData] = useState('');\r\n\r\n  const parseJson = () => {\r\n    try {\r\n      const parsedData = JSON.parse(jsonData);\r\n      const tableRows = Object.entries(parsedData).map(([key, value], index) => ({\r\n        stt: index + 1,\r\n        attribute: key,\r\n        dataType: typeof value,\r\n        description: '',\r\n        required: 'N',\r\n      }));\r\n      setTableData(tableRows);\r\n    } catch (error) {\r\n      console.error('Invalid JSON format', error);\r\n      setTableData([]);\r\n    }\r\n  };\r\n\r\n  const copyToClipboard = () => {\r\n    const tableContent = tableData.map(\r\n      (row) => `${row.attribute}\\t${row.dataType}\\t${row.description}\\t${row.required}\\n`\r\n    );\r\n\r\n    const clipboardData = tableContent.join('');\r\n    \r\n    // Create a textarea element, set its value to clipboardData, and trigger a copy\r\n    const textarea = document.createElement('textarea');\r\n    textarea.value = clipboardData;\r\n    document.body.appendChild(textarea);\r\n    textarea.select();\r\n    document.execCommand('copy');\r\n    document.body.removeChild(textarea);\r\n\r\n    setCopiedData(clipboardData);\r\n    alert('Table data copied to clipboard!');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <textarea\r\n        rows=\"5\"\r\n        cols=\"50\"\r\n        value={jsonData}\r\n        onChange={(e) => setJsonData(e.target.value)}\r\n        placeholder=\"Enter JSON here\"\r\n      />\r\n      <br />\r\n      <button onClick={parseJson}>Generate Table</button>\r\n      <button onClick={copyToClipboard}>Copy to Clipboard</button>\r\n\r\n      <table border=\"1\">\r\n        <thead>\r\n          <tr>\r\n            <th>STT</th>\r\n            <th>Attribute</th>\r\n            <th>Data Type</th>\r\n            <th>Description</th>\r\n            <th>Required</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {tableData.map((row) => (\r\n            <tr key={row.attribute}>\r\n              <td>{row.stt}</td>\r\n              <td>{row.attribute}</td>\r\n              <td>{row.dataType}</td>\r\n              <td>\r\n                <input\r\n                  type=\"text\"\r\n                  value={row.description}\r\n                  onChange={(e) => {\r\n                    const updatedData = [...tableData];\r\n                    updatedData.find((item) => item.attribute === row.attribute).description =\r\n                      e.target.value;\r\n                    setTableData(updatedData);\r\n                  }}\r\n                />\r\n              </td>\r\n              <td>{row.required}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      {copiedData && (\r\n        <div>\r\n          <h3>Copied Data:</h3>\r\n          <pre>{copiedData}</pre>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JsonTable;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}