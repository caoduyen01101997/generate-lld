{"ast":null,"code":"\"use strict\";\n\nconst {\n  isRecognitionException,\n  tokenMatcher,\n  EOF\n} = require(\"chevrotain\");\nconst {\n  classBodyTypes\n} = require(\"./utils/class-body-types\");\nfunction defineRules($, t) {\n  /**\r\n   * Spec Deviation: As OrdinaryCompilationUnit and UnnamedClassCompilationUnit\r\n   * both can have multiple class or interface declarations, both were combined\r\n   * in the ordinaryCompilationUnit rule\r\n   *\r\n   * https://docs.oracle.com/javase/specs/jls/se21/html/jls-7.html#jls-7.3\r\n   * https://docs.oracle.com/javase/specs/jls/se21/preview/specs/unnamed-classes-instance-main-methods-jls.html\r\n   */\n  $.RULE(\"compilationUnit\", () => {\n    // custom optimized backtracking lookahead logic\n    const isModule = $.BACKTRACK_LOOKAHEAD($.isModuleCompilationUnit);\n    $.OR([{\n      GATE: () => isModule === false,\n      ALT: () => $.SUBRULE($.ordinaryCompilationUnit)\n    }, {\n      ALT: () => $.SUBRULE($.modularCompilationUnit)\n    }]);\n    // https://github.com/jhipster/prettier-java/pull/217\n    $.CONSUME(EOF);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-7.html#jls-OrdinaryCompilationUnit\n  $.RULE(\"ordinaryCompilationUnit\", () => {\n    $.OPTION({\n      GATE: $.BACKTRACK($.packageDeclaration),\n      DEF: () => {\n        $.SUBRULE($.packageDeclaration);\n      }\n    });\n    $.MANY(() => {\n      $.SUBRULE3($.importDeclaration);\n    });\n    $.MANY2(() => {\n      $.SUBRULE($.typeDeclaration);\n    });\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-7.html#jls-ModularCompilationUnit\n  $.RULE(\"modularCompilationUnit\", () => {\n    $.MANY(() => {\n      $.SUBRULE($.importDeclaration);\n    });\n    $.SUBRULE($.moduleDeclaration);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-7.html#jls-PackageDeclaration\n  $.RULE(\"packageDeclaration\", () => {\n    $.MANY(() => {\n      $.SUBRULE($.packageModifier);\n    });\n    $.CONSUME(t.Package);\n    $.CONSUME(t.Identifier);\n    $.MANY2(() => {\n      $.CONSUME(t.Dot);\n      $.CONSUME2(t.Identifier);\n    });\n    $.CONSUME2(t.Semicolon);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-7.html#jls-PackageModifier\n  $.RULE(\"packageModifier\", () => {\n    $.SUBRULE($.annotation);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-7.html#jls-ImportDeclaration\n  $.RULE(\"importDeclaration\", () => {\n    // Spec Deviation: The spec defines four different kinds of import declarations.\n    //                 Our grammar however combines those into a single rule due to difficulties\n    //                 distinguishing between the alternatives due to unbound common prefix.\n    // TODO: A post parsing step is required to align with the official specs.\n    //       The Identifier \"var\" is not allowed in all positions and variations of the importDeclaration\n    $.OR([{\n      ALT: () => {\n        $.CONSUME(t.Import);\n        $.OPTION(() => {\n          $.CONSUME(t.Static);\n        });\n        $.SUBRULE($.packageOrTypeName);\n        $.OPTION2(() => {\n          $.CONSUME(t.Dot);\n          $.CONSUME(t.Star);\n        });\n        $.CONSUME(t.Semicolon);\n      }\n    },\n    // Spec Deviation: The spec do not allow empty statement in between imports.\n    //                 However Java compiler consider empty statements valid, we chose\n    //                 to support that case, thus deviate from the spec.\n    //                 See here: https://github.com/jhipster/prettier-java/pull/158\n    {\n      ALT: () => $.SUBRULE($.emptyStatement)\n    }]);\n  });\n\n  /**\r\n   * Spec Deviation: As OrdinaryCompilationUnit and UnnamedClassCompilationUnit\r\n   * both can have multiple class or interface declarations, both were combined\r\n   * in the ordinaryCompilationUnit rule\r\n   *\r\n   * As a result, the typeDeclaration combine TopLevelClassOrInterfaceDeclaration and includes fields and method declarations as well\r\n   * to handle unnamed class compilation unit\r\n   *\r\n   * https://docs.oracle.com/javase/specs/jls/se21/html/jls-7.html#jls-TopLevelClassOrInterfaceDeclaration\r\n   * https://docs.oracle.com/javase/specs/jls/se21/preview/specs/unnamed-classes-instance-main-methods-jls.html\r\n   */\n  $.RULE(\"typeDeclaration\", () => {\n    // TODO: consider extracting the prefix modifiers here to avoid backtracking\n    const nextRuleType = $.BACKTRACK_LOOKAHEAD($.identifyClassBodyDeclarationType);\n    $.OR([{\n      ALT: () => $.CONSUME(t.Semicolon)\n    }, {\n      GATE: () => nextRuleType === classBodyTypes.classDeclaration,\n      ALT: () => $.SUBRULE($.classDeclaration)\n    }, {\n      GATE: () => nextRuleType === classBodyTypes.interfaceDeclaration,\n      ALT: () => $.SUBRULE($.interfaceDeclaration)\n    }, {\n      GATE: () => nextRuleType === classBodyTypes.fieldDeclaration,\n      ALT: () => $.SUBRULE($.fieldDeclaration)\n    }, {\n      ALT: () => $.SUBRULE($.methodDeclaration)\n    }]);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-7.html#jls-ModuleDeclaration\n  $.RULE(\"moduleDeclaration\", () => {\n    $.MANY(() => {\n      $.SUBRULE($.annotation);\n    });\n    $.OPTION(() => {\n      $.CONSUME(t.Open);\n    });\n    $.CONSUME(t.Module);\n    $.CONSUME(t.Identifier);\n    $.MANY2(() => {\n      $.CONSUME(t.Dot);\n      $.CONSUME2(t.Identifier);\n    });\n    $.CONSUME(t.LCurly);\n    $.MANY3(() => {\n      $.SUBRULE($.moduleDirective);\n    });\n    $.CONSUME(t.RCurly);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-7.html#jls-ModuleDirective\n  $.RULE(\"moduleDirective\", () => {\n    // Spec Deviation: Each of the alternatives of \"moduleDirective\" was extracted\n    //                 to its own nonTerminal, to reduce verbosity.\n    $.OR([{\n      ALT: () => $.SUBRULE($.requiresModuleDirective)\n    }, {\n      ALT: () => $.SUBRULE($.exportsModuleDirective)\n    }, {\n      ALT: () => $.SUBRULE($.opensModuleDirective)\n    }, {\n      ALT: () => $.SUBRULE($.usesModuleDirective)\n    }, {\n      ALT: () => $.SUBRULE($.providesModuleDirective)\n    }]);\n  });\n  $.RULE(\"requiresModuleDirective\", () => {\n    // Spec Deviation: extracted from \"moduleDirective\"\n    $.CONSUME(t.Requires);\n    $.MANY({\n      GATE: () => {\n        /**\r\n         * https://docs.oracle.com/javase/specs/jls/se16/html/jls-3.html#jls-3.9 -\r\n         *   There is one exception: immediately to the right of the character sequence `requires` in the ModuleDirective production,\r\n         *   the character sequence `transitive` is tokenized as a keyword unless it is followed by a separator,\r\n         *   in which case it is tokenized as an identifier.\r\n         */\n        return (tokenMatcher($.LA(1).tokenType, t.Transitive) && tokenMatcher($.LA(2).tokenType, t.Separators)) === false;\n      },\n      DEF: () => {\n        $.SUBRULE($.requiresModifier);\n      }\n    });\n    $.SUBRULE($.moduleName);\n    $.CONSUME(t.Semicolon);\n  });\n  $.RULE(\"exportsModuleDirective\", () => {\n    // Spec Deviation: extracted from \"moduleDirective\"\n    $.CONSUME(t.Exports);\n    $.SUBRULE($.packageName);\n    $.OPTION(() => {\n      $.CONSUME(t.To);\n      $.SUBRULE($.moduleName);\n      $.MANY(() => {\n        $.CONSUME(t.Comma);\n        $.SUBRULE2($.moduleName);\n      });\n    });\n    $.CONSUME(t.Semicolon);\n  });\n  $.RULE(\"opensModuleDirective\", () => {\n    // Spec Deviation: extracted from \"moduleDirective\"\n    $.CONSUME(t.Opens);\n    $.SUBRULE($.packageName);\n    $.OPTION(() => {\n      $.CONSUME(t.To);\n      $.SUBRULE($.moduleName);\n      $.MANY(() => {\n        $.CONSUME(t.Comma);\n        $.SUBRULE2($.moduleName);\n      });\n    });\n    $.CONSUME(t.Semicolon);\n  });\n  $.RULE(\"usesModuleDirective\", () => {\n    // Spec Deviation: extracted from \"moduleDirective\"\n    $.CONSUME(t.Uses);\n    $.SUBRULE($.typeName);\n    $.CONSUME(t.Semicolon);\n  });\n  $.RULE(\"providesModuleDirective\", () => {\n    // Spec Deviation: extracted from \"moduleDirective\"\n    $.CONSUME(t.Provides);\n    $.SUBRULE($.typeName);\n    $.CONSUME(t.With);\n    $.SUBRULE2($.typeName);\n    $.MANY(() => {\n      $.CONSUME(t.Comma);\n      $.SUBRULE3($.typeName);\n    });\n    $.CONSUME(t.Semicolon);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-7.html#jls-RequiresModifier\n  $.RULE(\"requiresModifier\", () => {\n    $.OR([{\n      ALT: () => $.CONSUME(t.Transitive)\n    }, {\n      ALT: () => $.CONSUME(t.Static)\n    }]);\n  });\n  $.RULE(\"isModuleCompilationUnit\", () => {\n    $.OPTION(() => {\n      $.SUBRULE($.packageDeclaration);\n      // TODO: this return must be outside the OPTION at the top level rule\n      // a Java Module source code may not contain a package declaration.\n      return false;\n    });\n    try {\n      // the \"{importDeclaration}\" is a common prefix\n      $.MANY(() => {\n        $.SUBRULE2($.importDeclaration);\n      });\n      $.MANY2({\n        // To avoid ambiguity with @interface (\"AnnotationTypeDeclaration\" vs \"Annotaion\")\n        GATE: () => (tokenMatcher($.LA(1).tokenType, t.At) && tokenMatcher($.LA(2).tokenType, t.Interface)) === false,\n        DEF: () => {\n          $.SUBRULE($.annotation);\n        }\n      });\n    } catch (e) {\n      // This means we had a syntax error in the imports or annotations\n      // So we can't keep parsing deep enough to make the decision\n      if (isRecognitionException(e)) {\n        // TODO: add original syntax error?\n        throw \"Cannot Identify if the source code is an OrdinaryCompilationUnit or  ModularCompilationUnit\";\n      } else {\n        throw e;\n      }\n    }\n    const nextTokenType = this.LA(1).tokenType;\n    return tokenMatcher(nextTokenType, t.Open) || tokenMatcher(nextTokenType, t.Module);\n  });\n}\nmodule.exports = {\n  defineRules\n};","map":{"version":3,"names":["isRecognitionException","tokenMatcher","EOF","require","classBodyTypes","defineRules","$","t","RULE","isModule","BACKTRACK_LOOKAHEAD","isModuleCompilationUnit","OR","GATE","ALT","SUBRULE","ordinaryCompilationUnit","modularCompilationUnit","CONSUME","OPTION","BACKTRACK","packageDeclaration","DEF","MANY","SUBRULE3","importDeclaration","MANY2","typeDeclaration","moduleDeclaration","packageModifier","Package","Identifier","Dot","CONSUME2","Semicolon","annotation","Import","Static","packageOrTypeName","OPTION2","Star","emptyStatement","nextRuleType","identifyClassBodyDeclarationType","classDeclaration","interfaceDeclaration","fieldDeclaration","methodDeclaration","Open","Module","LCurly","MANY3","moduleDirective","RCurly","requiresModuleDirective","exportsModuleDirective","opensModuleDirective","usesModuleDirective","providesModuleDirective","Requires","LA","tokenType","Transitive","Separators","requiresModifier","moduleName","Exports","packageName","To","Comma","SUBRULE2","Opens","Uses","typeName","Provides","With","At","Interface","e","nextTokenType","module","exports"],"sources":["D:/sourcecode/create-json-type/your-app/generate-lld/node_modules/java-parser/src/productions/packages-and-modules.js"],"sourcesContent":["\"use strict\";\r\nconst { isRecognitionException, tokenMatcher, EOF } = require(\"chevrotain\");\r\nconst { classBodyTypes } = require(\"./utils/class-body-types\");\r\n\r\nfunction defineRules($, t) {\r\n  /**\r\n   * Spec Deviation: As OrdinaryCompilationUnit and UnnamedClassCompilationUnit\r\n   * both can have multiple class or interface declarations, both were combined\r\n   * in the ordinaryCompilationUnit rule\r\n   *\r\n   * https://docs.oracle.com/javase/specs/jls/se21/html/jls-7.html#jls-7.3\r\n   * https://docs.oracle.com/javase/specs/jls/se21/preview/specs/unnamed-classes-instance-main-methods-jls.html\r\n   */\r\n  $.RULE(\"compilationUnit\", () => {\r\n    // custom optimized backtracking lookahead logic\r\n    const isModule = $.BACKTRACK_LOOKAHEAD($.isModuleCompilationUnit);\r\n\r\n    $.OR([\r\n      {\r\n        GATE: () => isModule === false,\r\n        ALT: () => $.SUBRULE($.ordinaryCompilationUnit)\r\n      },\r\n      {\r\n        ALT: () => $.SUBRULE($.modularCompilationUnit)\r\n      }\r\n    ]);\r\n    // https://github.com/jhipster/prettier-java/pull/217\r\n    $.CONSUME(EOF);\r\n  });\r\n\r\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-7.html#jls-OrdinaryCompilationUnit\r\n  $.RULE(\"ordinaryCompilationUnit\", () => {\r\n    $.OPTION({\r\n      GATE: $.BACKTRACK($.packageDeclaration),\r\n      DEF: () => {\r\n        $.SUBRULE($.packageDeclaration);\r\n      }\r\n    });\r\n    $.MANY(() => {\r\n      $.SUBRULE3($.importDeclaration);\r\n    });\r\n    $.MANY2(() => {\r\n      $.SUBRULE($.typeDeclaration);\r\n    });\r\n  });\r\n\r\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-7.html#jls-ModularCompilationUnit\r\n  $.RULE(\"modularCompilationUnit\", () => {\r\n    $.MANY(() => {\r\n      $.SUBRULE($.importDeclaration);\r\n    });\r\n    $.SUBRULE($.moduleDeclaration);\r\n  });\r\n\r\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-7.html#jls-PackageDeclaration\r\n  $.RULE(\"packageDeclaration\", () => {\r\n    $.MANY(() => {\r\n      $.SUBRULE($.packageModifier);\r\n    });\r\n    $.CONSUME(t.Package);\r\n    $.CONSUME(t.Identifier);\r\n    $.MANY2(() => {\r\n      $.CONSUME(t.Dot);\r\n      $.CONSUME2(t.Identifier);\r\n    });\r\n    $.CONSUME2(t.Semicolon);\r\n  });\r\n\r\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-7.html#jls-PackageModifier\r\n  $.RULE(\"packageModifier\", () => {\r\n    $.SUBRULE($.annotation);\r\n  });\r\n\r\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-7.html#jls-ImportDeclaration\r\n  $.RULE(\"importDeclaration\", () => {\r\n    // Spec Deviation: The spec defines four different kinds of import declarations.\r\n    //                 Our grammar however combines those into a single rule due to difficulties\r\n    //                 distinguishing between the alternatives due to unbound common prefix.\r\n    // TODO: A post parsing step is required to align with the official specs.\r\n    //       The Identifier \"var\" is not allowed in all positions and variations of the importDeclaration\r\n    $.OR([\r\n      {\r\n        ALT: () => {\r\n          $.CONSUME(t.Import);\r\n          $.OPTION(() => {\r\n            $.CONSUME(t.Static);\r\n          });\r\n          $.SUBRULE($.packageOrTypeName);\r\n          $.OPTION2(() => {\r\n            $.CONSUME(t.Dot);\r\n            $.CONSUME(t.Star);\r\n          });\r\n          $.CONSUME(t.Semicolon);\r\n        }\r\n      },\r\n      // Spec Deviation: The spec do not allow empty statement in between imports.\r\n      //                 However Java compiler consider empty statements valid, we chose\r\n      //                 to support that case, thus deviate from the spec.\r\n      //                 See here: https://github.com/jhipster/prettier-java/pull/158\r\n      {\r\n        ALT: () => $.SUBRULE($.emptyStatement)\r\n      }\r\n    ]);\r\n  });\r\n\r\n  /**\r\n   * Spec Deviation: As OrdinaryCompilationUnit and UnnamedClassCompilationUnit\r\n   * both can have multiple class or interface declarations, both were combined\r\n   * in the ordinaryCompilationUnit rule\r\n   *\r\n   * As a result, the typeDeclaration combine TopLevelClassOrInterfaceDeclaration and includes fields and method declarations as well\r\n   * to handle unnamed class compilation unit\r\n   *\r\n   * https://docs.oracle.com/javase/specs/jls/se21/html/jls-7.html#jls-TopLevelClassOrInterfaceDeclaration\r\n   * https://docs.oracle.com/javase/specs/jls/se21/preview/specs/unnamed-classes-instance-main-methods-jls.html\r\n   */\r\n  $.RULE(\"typeDeclaration\", () => {\r\n    // TODO: consider extracting the prefix modifiers here to avoid backtracking\r\n    const nextRuleType = $.BACKTRACK_LOOKAHEAD(\r\n      $.identifyClassBodyDeclarationType\r\n    );\r\n\r\n    $.OR([\r\n      { ALT: () => $.CONSUME(t.Semicolon) },\r\n      {\r\n        GATE: () => nextRuleType === classBodyTypes.classDeclaration,\r\n        ALT: () => $.SUBRULE($.classDeclaration)\r\n      },\r\n      {\r\n        GATE: () => nextRuleType === classBodyTypes.interfaceDeclaration,\r\n        ALT: () => $.SUBRULE($.interfaceDeclaration)\r\n      },\r\n      {\r\n        GATE: () => nextRuleType === classBodyTypes.fieldDeclaration,\r\n        ALT: () => $.SUBRULE($.fieldDeclaration)\r\n      },\r\n      {\r\n        ALT: () => $.SUBRULE($.methodDeclaration)\r\n      }\r\n    ]);\r\n  });\r\n\r\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-7.html#jls-ModuleDeclaration\r\n  $.RULE(\"moduleDeclaration\", () => {\r\n    $.MANY(() => {\r\n      $.SUBRULE($.annotation);\r\n    });\r\n    $.OPTION(() => {\r\n      $.CONSUME(t.Open);\r\n    });\r\n    $.CONSUME(t.Module);\r\n    $.CONSUME(t.Identifier);\r\n    $.MANY2(() => {\r\n      $.CONSUME(t.Dot);\r\n      $.CONSUME2(t.Identifier);\r\n    });\r\n    $.CONSUME(t.LCurly);\r\n    $.MANY3(() => {\r\n      $.SUBRULE($.moduleDirective);\r\n    });\r\n    $.CONSUME(t.RCurly);\r\n  });\r\n\r\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-7.html#jls-ModuleDirective\r\n  $.RULE(\"moduleDirective\", () => {\r\n    // Spec Deviation: Each of the alternatives of \"moduleDirective\" was extracted\r\n    //                 to its own nonTerminal, to reduce verbosity.\r\n    $.OR([\r\n      { ALT: () => $.SUBRULE($.requiresModuleDirective) },\r\n      { ALT: () => $.SUBRULE($.exportsModuleDirective) },\r\n      { ALT: () => $.SUBRULE($.opensModuleDirective) },\r\n      { ALT: () => $.SUBRULE($.usesModuleDirective) },\r\n      { ALT: () => $.SUBRULE($.providesModuleDirective) }\r\n    ]);\r\n  });\r\n\r\n  $.RULE(\"requiresModuleDirective\", () => {\r\n    // Spec Deviation: extracted from \"moduleDirective\"\r\n    $.CONSUME(t.Requires);\r\n    $.MANY({\r\n      GATE: () => {\r\n        /**\r\n         * https://docs.oracle.com/javase/specs/jls/se16/html/jls-3.html#jls-3.9 -\r\n         *   There is one exception: immediately to the right of the character sequence `requires` in the ModuleDirective production,\r\n         *   the character sequence `transitive` is tokenized as a keyword unless it is followed by a separator,\r\n         *   in which case it is tokenized as an identifier.\r\n         */\r\n        return (\r\n          (tokenMatcher($.LA(1).tokenType, t.Transitive) &&\r\n            tokenMatcher($.LA(2).tokenType, t.Separators)) === false\r\n        );\r\n      },\r\n      DEF: () => {\r\n        $.SUBRULE($.requiresModifier);\r\n      }\r\n    });\r\n    $.SUBRULE($.moduleName);\r\n    $.CONSUME(t.Semicolon);\r\n  });\r\n\r\n  $.RULE(\"exportsModuleDirective\", () => {\r\n    // Spec Deviation: extracted from \"moduleDirective\"\r\n    $.CONSUME(t.Exports);\r\n    $.SUBRULE($.packageName);\r\n    $.OPTION(() => {\r\n      $.CONSUME(t.To);\r\n      $.SUBRULE($.moduleName);\r\n      $.MANY(() => {\r\n        $.CONSUME(t.Comma);\r\n        $.SUBRULE2($.moduleName);\r\n      });\r\n    });\r\n    $.CONSUME(t.Semicolon);\r\n  });\r\n\r\n  $.RULE(\"opensModuleDirective\", () => {\r\n    // Spec Deviation: extracted from \"moduleDirective\"\r\n    $.CONSUME(t.Opens);\r\n    $.SUBRULE($.packageName);\r\n    $.OPTION(() => {\r\n      $.CONSUME(t.To);\r\n      $.SUBRULE($.moduleName);\r\n      $.MANY(() => {\r\n        $.CONSUME(t.Comma);\r\n        $.SUBRULE2($.moduleName);\r\n      });\r\n    });\r\n    $.CONSUME(t.Semicolon);\r\n  });\r\n\r\n  $.RULE(\"usesModuleDirective\", () => {\r\n    // Spec Deviation: extracted from \"moduleDirective\"\r\n    $.CONSUME(t.Uses);\r\n    $.SUBRULE($.typeName);\r\n    $.CONSUME(t.Semicolon);\r\n  });\r\n\r\n  $.RULE(\"providesModuleDirective\", () => {\r\n    // Spec Deviation: extracted from \"moduleDirective\"\r\n    $.CONSUME(t.Provides);\r\n    $.SUBRULE($.typeName);\r\n    $.CONSUME(t.With);\r\n    $.SUBRULE2($.typeName);\r\n    $.MANY(() => {\r\n      $.CONSUME(t.Comma);\r\n      $.SUBRULE3($.typeName);\r\n    });\r\n    $.CONSUME(t.Semicolon);\r\n  });\r\n\r\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-7.html#jls-RequiresModifier\r\n  $.RULE(\"requiresModifier\", () => {\r\n    $.OR([\r\n      { ALT: () => $.CONSUME(t.Transitive) },\r\n      { ALT: () => $.CONSUME(t.Static) }\r\n    ]);\r\n  });\r\n\r\n  $.RULE(\"isModuleCompilationUnit\", () => {\r\n    $.OPTION(() => {\r\n      $.SUBRULE($.packageDeclaration);\r\n      // TODO: this return must be outside the OPTION at the top level rule\r\n      // a Java Module source code may not contain a package declaration.\r\n      return false;\r\n    });\r\n\r\n    try {\r\n      // the \"{importDeclaration}\" is a common prefix\r\n      $.MANY(() => {\r\n        $.SUBRULE2($.importDeclaration);\r\n      });\r\n\r\n      $.MANY2({\r\n        // To avoid ambiguity with @interface (\"AnnotationTypeDeclaration\" vs \"Annotaion\")\r\n        GATE: () =>\r\n          (tokenMatcher($.LA(1).tokenType, t.At) &&\r\n            tokenMatcher($.LA(2).tokenType, t.Interface)) === false,\r\n        DEF: () => {\r\n          $.SUBRULE($.annotation);\r\n        }\r\n      });\r\n    } catch (e) {\r\n      // This means we had a syntax error in the imports or annotations\r\n      // So we can't keep parsing deep enough to make the decision\r\n      if (isRecognitionException(e)) {\r\n        // TODO: add original syntax error?\r\n        throw \"Cannot Identify if the source code is an OrdinaryCompilationUnit or  ModularCompilationUnit\";\r\n      } else {\r\n        throw e;\r\n      }\r\n    }\r\n\r\n    const nextTokenType = this.LA(1).tokenType;\r\n    return (\r\n      tokenMatcher(nextTokenType, t.Open) ||\r\n      tokenMatcher(nextTokenType, t.Module)\r\n    );\r\n  });\r\n}\r\n\r\nmodule.exports = {\r\n  defineRules\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}