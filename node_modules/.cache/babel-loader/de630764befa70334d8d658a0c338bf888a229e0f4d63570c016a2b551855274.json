{"ast":null,"code":"\"use strict\";\n\nconst {\n  isRecognitionException,\n  tokenMatcher\n} = require(\"chevrotain\");\nconst {\n  classBodyTypes\n} = require(\"./utils/class-body-types\");\nfunction defineRules($, t) {\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-ClassDeclaration\n  $.RULE(\"classDeclaration\", () => {\n    // Spec Deviation: extracted common \"{classModifier}\" prefix\n    //      extraction is safe because there are no other references to\n    //      \"normalClassDeclaration\" and \"enumDeclaration\"\n    $.MANY(() => {\n      $.SUBRULE($.classModifier);\n    });\n    $.OR([{\n      ALT: () => $.SUBRULE($.normalClassDeclaration)\n    }, {\n      ALT: () => $.SUBRULE($.enumDeclaration)\n    }, {\n      ALT: () => $.SUBRULE($.recordDeclaration)\n    }]);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-NormalClassDeclaration\n  $.RULE(\"normalClassDeclaration\", () => {\n    // Spec Deviation: extracted common \"{classModifier}\" to \"classDeclaration\"\n    $.CONSUME(t.Class);\n    $.SUBRULE($.typeIdentifier);\n    $.OPTION(() => {\n      $.SUBRULE($.typeParameters);\n    });\n    $.OPTION2(() => {\n      $.SUBRULE($.superclass);\n    });\n    $.OPTION3(() => {\n      $.SUBRULE($.superinterfaces);\n    });\n    $.OPTION4(() => {\n      $.SUBRULE($.classPermits);\n    });\n    $.SUBRULE($.classBody);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-ClassModifier\n  $.RULE(\"classModifier\", () => {\n    $.OR([{\n      ALT: () => $.SUBRULE($.annotation)\n    }, {\n      ALT: () => $.CONSUME(t.Public)\n    }, {\n      ALT: () => $.CONSUME(t.Protected)\n    }, {\n      ALT: () => $.CONSUME(t.Private)\n    }, {\n      ALT: () => $.CONSUME(t.Abstract)\n    }, {\n      ALT: () => $.CONSUME(t.Static)\n    }, {\n      ALT: () => $.CONSUME(t.Final)\n    }, {\n      ALT: () => $.CONSUME(t.Sealed)\n    }, {\n      ALT: () => $.CONSUME(t.NonSealed)\n    }, {\n      ALT: () => $.CONSUME(t.Strictfp)\n    }]);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-TypeParameters\n  $.RULE(\"typeParameters\", () => {\n    $.CONSUME(t.Less);\n    $.SUBRULE($.typeParameterList);\n    $.CONSUME(t.Greater);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-TypeParameterList\n  $.RULE(\"typeParameterList\", () => {\n    $.SUBRULE($.typeParameter);\n    $.MANY(() => {\n      $.CONSUME(t.Comma);\n      $.SUBRULE2($.typeParameter);\n    });\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-ClassExtends\n  $.RULE(\"superclass\", () => {\n    $.CONSUME(t.Extends);\n    $.SUBRULE($.classType);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-ClassImplements\n  $.RULE(\"superinterfaces\", () => {\n    $.CONSUME(t.Implements);\n    $.SUBRULE($.interfaceTypeList);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-InterfaceTypeList\n  $.RULE(\"interfaceTypeList\", () => {\n    $.SUBRULE($.interfaceType);\n    $.MANY(() => {\n      $.CONSUME(t.Comma);\n      $.SUBRULE2($.interfaceType);\n    });\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/preview/specs/sealed-classes-jls.html\n  $.RULE(\"classPermits\", () => {\n    $.CONSUME(t.Permits);\n    $.SUBRULE($.typeName);\n    $.MANY(() => {\n      $.CONSUME(t.Comma);\n      $.SUBRULE2($.typeName);\n    });\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-ClassBody\n  $.RULE(\"classBody\", () => {\n    $.CONSUME(t.LCurly);\n    $.MANY(() => {\n      $.SUBRULE($.classBodyDeclaration);\n    });\n    $.CONSUME(t.RCurly);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-ClassBodyDeclaration\n  $.RULE(\"classBodyDeclaration\", () => {\n    const nextRuleType = $.BACKTRACK_LOOKAHEAD($.identifyClassBodyDeclarationType);\n    $.OR([{\n      GATE: () => nextRuleType >= classBodyTypes.fieldDeclaration && nextRuleType <= classBodyTypes.semiColon,\n      ALT: () => $.SUBRULE($.classMemberDeclaration, {\n        ARGS: [nextRuleType]\n      })\n    },\n    // no gate needed for the initializers because these are LL(1) rules.\n    {\n      ALT: () => $.SUBRULE($.instanceInitializer)\n    }, {\n      ALT: () => $.SUBRULE($.staticInitializer)\n    }, {\n      GATE: () => tokenMatcher(nextRuleType, classBodyTypes.constructorDeclaration),\n      ALT: () => $.SUBRULE($.constructorDeclaration)\n    }]);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-ClassMemberDeclaration\n  $.RULE(\"classMemberDeclaration\", nextRuleType => {\n    $.OR([{\n      GATE: () => nextRuleType === classBodyTypes.fieldDeclaration,\n      ALT: () => $.SUBRULE($.fieldDeclaration)\n    }, {\n      GATE: () => nextRuleType === classBodyTypes.methodDeclaration,\n      ALT: () => $.SUBRULE($.methodDeclaration)\n    }, {\n      GATE: () => nextRuleType === classBodyTypes.classDeclaration,\n      ALT: () => $.SUBRULE($.classDeclaration)\n    }, {\n      GATE: () => nextRuleType === classBodyTypes.interfaceDeclaration,\n      ALT: () => $.SUBRULE($.interfaceDeclaration)\n    }, {\n      // No GATE is needed as this is LL(1)\n      ALT: () => $.CONSUME(t.Semicolon)\n    }]);\n  });\n\n  // // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-FieldDeclaration\n  $.RULE(\"fieldDeclaration\", () => {\n    $.MANY(() => {\n      $.SUBRULE($.fieldModifier);\n    });\n    $.SUBRULE($.unannType);\n    $.SUBRULE($.variableDeclaratorList);\n    $.CONSUME(t.Semicolon);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-FieldModifier\n  $.RULE(\"fieldModifier\", () => {\n    $.OR([{\n      ALT: () => $.SUBRULE($.annotation)\n    }, {\n      ALT: () => $.CONSUME(t.Public)\n    }, {\n      ALT: () => $.CONSUME(t.Protected)\n    }, {\n      ALT: () => $.CONSUME(t.Private)\n    }, {\n      ALT: () => $.CONSUME(t.Static)\n    }, {\n      ALT: () => $.CONSUME(t.Final)\n    }, {\n      ALT: () => $.CONSUME(t.Transient)\n    }, {\n      ALT: () => $.CONSUME(t.Volatile)\n    }]);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-VariableDeclaratorList\n  $.RULE(\"variableDeclaratorList\", () => {\n    $.SUBRULE($.variableDeclarator);\n    $.MANY({\n      // required to distinguish from patternList\n      GATE: () => !tokenMatcher(this.LA(3).tokenType, t.Identifier),\n      DEF: () => {\n        $.CONSUME(t.Comma);\n        $.SUBRULE2($.variableDeclarator);\n      }\n    });\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-VariableDeclarator\n  $.RULE(\"variableDeclarator\", () => {\n    $.SUBRULE($.variableDeclaratorId);\n    $.OPTION(() => {\n      $.CONSUME(t.Equals);\n      $.SUBRULE($.variableInitializer);\n    });\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-VariableDeclaratorId\n  $.RULE(\"variableDeclaratorId\", () => {\n    $.CONSUME(t.Identifier);\n    $.OPTION(() => {\n      $.SUBRULE($.dims);\n    });\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-VariableInitializer\n  $.RULE(\"variableInitializer\", () => {\n    $.OR([{\n      ALT: () => $.SUBRULE($.expression)\n    }, {\n      ALT: () => $.SUBRULE($.arrayInitializer)\n    }]);\n  });\n\n  // // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-UnannType\n  $.RULE(\"unannType\", () => {\n    $.OR([\n    // Spec Deviation: The array type \"dims\" suffix was extracted to this rule\n    // to avoid backtracking for performance reasons.\n    {\n      ALT: () => $.SUBRULE($.unannPrimitiveTypeWithOptionalDimsSuffix)\n    }, {\n      ALT: () => $.SUBRULE($.unannReferenceType)\n    }]);\n  });\n  $.RULE(\"unannPrimitiveTypeWithOptionalDimsSuffix\", () => {\n    $.SUBRULE($.unannPrimitiveType);\n    $.OPTION({\n      GATE: () => this.BACKTRACK_LOOKAHEAD($.isDims),\n      DEF: () => $.SUBRULE2($.dims)\n    });\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-UnannPrimitiveType\n  $.RULE(\"unannPrimitiveType\", () => {\n    $.OR([{\n      ALT: () => $.SUBRULE($.numericType)\n    }, {\n      ALT: () => $.CONSUME(t.Boolean)\n    }]);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-UnannReferenceType\n  $.RULE(\"unannReferenceType\", () => {\n    $.SUBRULE($.unannClassOrInterfaceType);\n    $.OPTION({\n      GATE: () => this.BACKTRACK_LOOKAHEAD($.isDims),\n      DEF: () => $.SUBRULE2($.dims)\n    });\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-UnannClassType\n  $.RULE(\"unannClassOrInterfaceType\", () => {\n    // Spec Deviation: The spec says: \"UnannClassType  | UnannInterfaceType\" but \"UnannInterfaceType\"\n    //                 is not mentioned in the parser because it is identical to \"UnannClassType\"\n    //                 The distinction is **semantic** not syntactic.\n    $.SUBRULE($.unannClassType);\n  });\n  $.RULE(\"unannClassType\", () => {\n    // Spec Deviation: Refactored left recursion and alternation to iterations\n    $.CONSUME(t.Identifier);\n    $.OPTION(() => {\n      $.SUBRULE($.typeArguments);\n    });\n    $.MANY2(() => {\n      $.CONSUME(t.Dot);\n      $.MANY3(() => {\n        $.SUBRULE2($.annotation);\n      });\n      // TODO: Semantic Check: This Identifier cannot be \"var\"\n      $.CONSUME2(t.Identifier);\n      $.OPTION2(() => {\n        $.SUBRULE2($.typeArguments);\n      });\n    });\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-UnannInterfaceType\n  $.RULE(\"unannInterfaceType\", () => {\n    $.SUBRULE($.unannClassType);\n  });\n  $.RULE(\"unannTypeVariable\", () => {\n    // TODO: Semantic Check: This Identifier cannot be \"var\"\n    // TODO: or define as token type?\n    $.CONSUME(t.Identifier);\n  });\n\n  // // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-MethodDeclaration\n  $.RULE(\"methodDeclaration\", () => {\n    $.MANY(() => {\n      $.SUBRULE($.methodModifier);\n    });\n    $.SUBRULE($.methodHeader);\n    $.SUBRULE($.methodBody);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-MethodModifier\n  $.RULE(\"methodModifier\", () => {\n    $.OR([{\n      ALT: () => $.SUBRULE($.annotation)\n    }, {\n      ALT: () => $.CONSUME(t.Public)\n    }, {\n      ALT: () => $.CONSUME(t.Protected)\n    }, {\n      ALT: () => $.CONSUME(t.Private)\n    }, {\n      ALT: () => $.CONSUME(t.Abstract)\n    }, {\n      ALT: () => $.CONSUME(t.Static)\n    }, {\n      ALT: () => $.CONSUME(t.Final)\n    }, {\n      ALT: () => $.CONSUME(t.Synchronized)\n    }, {\n      ALT: () => $.CONSUME(t.Native)\n    }, {\n      ALT: () => $.CONSUME(t.Strictfp)\n    }]);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-MethodHeader\n  $.RULE(\"methodHeader\", () => {\n    // Spec Deviation: extracted common prefix from both alternatives\n    $.OPTION(() => {\n      $.SUBRULE($.typeParameters);\n      $.MANY(() => {\n        $.SUBRULE($.annotation);\n      });\n    });\n    $.SUBRULE($.result);\n    $.SUBRULE($.methodDeclarator);\n    $.OPTION2(() => {\n      $.SUBRULE($.throws);\n    });\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-Result\n  $.RULE(\"result\", () => {\n    $.OR([{\n      ALT: () => $.SUBRULE($.unannType)\n    }, {\n      ALT: () => $.CONSUME(t.Void)\n    }]);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se8/html/jls-8.html#jls-MethodDeclarator\n  $.RULE(\"methodDeclarator\", () => {\n    $.CONSUME(t.Identifier);\n    $.CONSUME(t.LBrace);\n    $.OPTION(() => {\n      $.SUBRULE($.formalParameterList);\n    });\n    $.CONSUME(t.RBrace);\n    $.OPTION2(() => {\n      $.SUBRULE($.dims);\n    });\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-ReceiverParameter\n  $.RULE(\"receiverParameter\", () => {\n    $.MANY(() => {\n      $.SUBRULE($.annotation);\n    });\n    $.SUBRULE($.unannType);\n    $.OPTION(() => {\n      $.CONSUME(t.Identifier);\n      $.CONSUME(t.Dot);\n    });\n    $.CONSUME(t.This);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-FormalParameterList\n  $.RULE(\"formalParameterList\", () => {\n    $.SUBRULE($.formalParameter);\n    $.MANY(() => {\n      $.CONSUME(t.Comma);\n      $.SUBRULE2($.formalParameter);\n    });\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-FormalParameter\n  $.RULE(\"formalParameter\", () => {\n    $.OR([\n    // Spec Deviation: extracted to \"variableParaRegularParameter\"\n    {\n      GATE: $.BACKTRACK($.variableParaRegularParameter),\n      ALT: () => $.SUBRULE($.variableParaRegularParameter)\n    }, {\n      ALT: () => $.SUBRULE($.variableArityParameter)\n    }]);\n  });\n\n  // Spec Deviation: extracted from \"formalParameter\"\n  $.RULE(\"variableParaRegularParameter\", () => {\n    $.MANY(() => {\n      $.SUBRULE($.variableModifier);\n    });\n    $.SUBRULE($.unannType);\n    $.SUBRULE($.variableDeclaratorId);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-VariableArityParameter\n  $.RULE(\"variableArityParameter\", () => {\n    $.MANY(() => {\n      $.SUBRULE($.variableModifier);\n    });\n    $.SUBRULE($.unannType);\n    $.MANY2(() => {\n      $.SUBRULE($.annotation);\n    });\n    $.CONSUME(t.DotDotDot);\n    $.CONSUME(t.Identifier);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-VariableModifier\n  $.RULE(\"variableModifier\", () => {\n    $.OR([{\n      ALT: () => $.SUBRULE($.annotation)\n    }, {\n      ALT: () => $.CONSUME(t.Final)\n    }]);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-Throws\n  $.RULE(\"throws\", () => {\n    $.CONSUME(t.Throws);\n    $.SUBRULE($.exceptionTypeList);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-ExceptionTypeList\n  $.RULE(\"exceptionTypeList\", () => {\n    $.SUBRULE($.exceptionType);\n    $.MANY(() => {\n      $.CONSUME(t.Comma);\n      $.SUBRULE2($.exceptionType);\n    });\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-ExceptionType\n  $.RULE(\"exceptionType\", () => {\n    // Spec Deviation: \"typeVariable\" alternative is missing because\n    //                 it is contained in classType.\n    $.SUBRULE($.classType);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-MethodBody\n  $.RULE(\"methodBody\", () => {\n    $.OR([{\n      ALT: () => $.SUBRULE($.block)\n    }, {\n      ALT: () => $.CONSUME(t.Semicolon)\n    }]);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-InstanceInitializer\n  $.RULE(\"instanceInitializer\", () => {\n    $.SUBRULE($.block);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-StaticInitializer\n  $.RULE(\"staticInitializer\", () => {\n    $.CONSUME(t.Static);\n    $.SUBRULE($.block);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-ConstructorDeclaration\n  $.RULE(\"constructorDeclaration\", () => {\n    $.MANY(() => {\n      $.SUBRULE($.constructorModifier);\n    });\n    $.SUBRULE($.constructorDeclarator);\n    $.OPTION(() => {\n      $.SUBRULE($.throws);\n    });\n    $.SUBRULE($.constructorBody);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-ConstructorModifier\n  $.RULE(\"constructorModifier\", () => {\n    $.OR([{\n      ALT: () => $.SUBRULE($.annotation)\n    }, {\n      ALT: () => $.CONSUME(t.Public)\n    }, {\n      ALT: () => $.CONSUME(t.Protected)\n    }, {\n      ALT: () => $.CONSUME(t.Private)\n    }]);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-ConstructorDeclarator\n  $.RULE(\"constructorDeclarator\", () => {\n    $.OPTION(() => {\n      $.SUBRULE($.typeParameters);\n    });\n    $.SUBRULE($.simpleTypeName);\n    $.CONSUME(t.LBrace);\n    $.OPTION2({\n      // a \"formalParameterList\" and a \"receiverParameter\"\n      // cannot be distinguished using fixed lookahead.\n      GATE: $.BACKTRACK($.receiverParameter),\n      DEF: () => {\n        $.SUBRULE($.receiverParameter);\n        $.CONSUME(t.Comma);\n      }\n    });\n    $.OPTION3(() => {\n      $.SUBRULE($.formalParameterList);\n    });\n    $.CONSUME(t.RBrace);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-SimpleTypeName\n  $.RULE(\"simpleTypeName\", () => {\n    // TODO: implement: Identifier but not var\n    $.CONSUME(t.Identifier);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-ConstructorBody\n  $.RULE(\"constructorBody\", () => {\n    $.CONSUME(t.LCurly);\n    $.OPTION({\n      GATE: $.BACKTRACK($.explicitConstructorInvocation),\n      DEF: () => {\n        $.SUBRULE($.explicitConstructorInvocation);\n      }\n    });\n    $.OPTION2(() => {\n      $.SUBRULE($.blockStatements);\n    });\n    $.CONSUME(t.RCurly);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-ExplicitConstructorInvocation\n  $.RULE(\"explicitConstructorInvocation\", () => {\n    // Spec Deviation: split into two separate sub rules.\n    $.OR([{\n      ALT: () => $.SUBRULE($.unqualifiedExplicitConstructorInvocation)\n    }, {\n      ALT: () => $.SUBRULE($.qualifiedExplicitConstructorInvocation)\n    }]);\n  });\n  $.RULE(\"unqualifiedExplicitConstructorInvocation\", () => {\n    $.OPTION(() => {\n      $.SUBRULE($.typeArguments);\n    });\n    $.OR([{\n      ALT: () => $.CONSUME(t.This)\n    }, {\n      ALT: () => $.CONSUME(t.Super)\n    }]);\n    $.CONSUME(t.LBrace);\n    $.OPTION2(() => {\n      $.SUBRULE($.argumentList);\n    });\n    $.CONSUME(t.RBrace);\n    $.CONSUME(t.Semicolon);\n  });\n  $.RULE(\"qualifiedExplicitConstructorInvocation\", () => {\n    // Spec Deviation: According to the spec the prefix may be a \"primary' as well,\n    //                 however, most primary variants don't make sense here\n    // TODO: discover which primary forms could be valid here\n    //       and handle only those specific cases.\n    //       It is best if we avoid referencing \"primary\" rule from\n    //       outside the expressions rules as the expressions rules are not aligned\n    //       to the spec style, so we want the smallest possible \"external api\"\n    //       for the expressions rules.\n    $.SUBRULE($.expressionName);\n    $.CONSUME(t.Dot);\n    $.OPTION(() => {\n      $.SUBRULE($.typeArguments);\n    });\n    $.CONSUME(t.Super);\n    $.CONSUME(t.LBrace);\n    $.OPTION2(() => {\n      $.SUBRULE($.argumentList);\n    });\n    $.CONSUME(t.RBrace);\n    $.CONSUME(t.Semicolon);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-EnumDeclaration\n  $.RULE(\"enumDeclaration\", () => {\n    $.MANY(() => {\n      $.SUBRULE($.classModifier);\n    });\n    $.CONSUME(t.Enum);\n    $.SUBRULE($.typeIdentifier);\n    $.OPTION(() => {\n      $.SUBRULE($.superinterfaces);\n    });\n    $.SUBRULE($.enumBody);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-EnumBody\n  $.RULE(\"enumBody\", () => {\n    $.CONSUME(t.LCurly);\n    $.OPTION(() => {\n      $.SUBRULE($.enumConstantList);\n    });\n    $.OPTION2(() => {\n      $.CONSUME(t.Comma);\n    });\n    $.OPTION3(() => {\n      $.SUBRULE($.enumBodyDeclarations);\n    });\n    $.CONSUME(t.RCurly);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-EnumConstantList\n  $.RULE(\"enumConstantList\", () => {\n    $.SUBRULE($.enumConstant);\n    $.MANY({\n      GATE: () => {\n        const nextToken = $.LA(2);\n        return tokenMatcher(nextToken, t.Identifier) || tokenMatcher(nextToken, t.At);\n      },\n      DEF: () => {\n        $.CONSUME(t.Comma);\n        $.SUBRULE2($.enumConstant);\n      }\n    });\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-EnumConstant\n  $.RULE(\"enumConstant\", () => {\n    $.MANY(() => {\n      $.SUBRULE($.enumConstantModifier);\n    });\n    $.CONSUME(t.Identifier);\n    $.OPTION(() => {\n      $.CONSUME(t.LBrace);\n      $.OPTION2(() => {\n        $.SUBRULE($.argumentList);\n      });\n      $.CONSUME(t.RBrace);\n    });\n    $.OPTION3(() => {\n      $.SUBRULE($.classBody);\n    });\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-EnumConstantModifier\n  $.RULE(\"enumConstantModifier\", () => {\n    $.SUBRULE($.annotation);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-EnumBodyDeclarations\n  $.RULE(\"enumBodyDeclarations\", () => {\n    $.CONSUME(t.Semicolon);\n    $.MANY(() => {\n      $.SUBRULE($.classBodyDeclaration);\n    });\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-RecordHeader\n  $.RULE(\"recordDeclaration\", () => {\n    $.CONSUME(t.Record);\n    $.SUBRULE($.typeIdentifier);\n    $.OPTION(() => {\n      $.SUBRULE($.typeParameters);\n    });\n    $.SUBRULE($.recordHeader);\n    $.OPTION2(() => {\n      $.SUBRULE($.superinterfaces);\n    });\n    $.SUBRULE($.recordBody);\n  });\n  $.RULE(\"recordHeader\", () => {\n    $.CONSUME(t.LBrace);\n    $.OPTION(() => {\n      $.SUBRULE($.recordComponentList);\n    });\n    $.CONSUME(t.RBrace);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-RecordComponentList\n  $.RULE(\"recordComponentList\", () => {\n    $.SUBRULE($.recordComponent);\n    $.MANY(() => {\n      $.CONSUME(t.Comma);\n      $.SUBRULE2($.recordComponent);\n    });\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-RecordComponent\n  $.RULE(\"recordComponent\", () => {\n    // Spec Deviation: extracted common \"{recordComponentModifier} unannType\" prefix\n    //      extraction is safe because there are no other references to\n    //      \"variableArityRecordComponent\"\n    $.MANY(() => {\n      $.SUBRULE($.recordComponentModifier);\n    });\n    $.SUBRULE($.unannType);\n    $.OR([{\n      ALT: () => $.CONSUME(t.Identifier)\n    }, {\n      ALT: () => $.SUBRULE($.variableArityRecordComponent)\n    }]);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-VariableArityRecordComponent\n  // Spec Deviation: common \"{recordComponentModifier} unannType\" prefix was extracted in \"recordComponent\"\n  $.RULE(\"variableArityRecordComponent\", () => {\n    $.MANY(() => {\n      $.SUBRULE($.annotation);\n    });\n    $.CONSUME(t.DotDotDot);\n    $.CONSUME(t.Identifier);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-RecordComponentModifier\n  $.RULE(\"recordComponentModifier\", () => {\n    $.SUBRULE($.annotation);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-RecordBody\n  $.RULE(\"recordBody\", () => {\n    $.CONSUME(t.LCurly);\n    $.MANY(() => {\n      $.SUBRULE($.recordBodyDeclaration);\n    });\n    $.CONSUME(t.RCurly);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-RecordBodyDeclaration\n  $.RULE(\"recordBodyDeclaration\", () => {\n    $.OR([{\n      GATE: () => this.BACKTRACK_LOOKAHEAD($.isCompactConstructorDeclaration),\n      ALT: () => $.SUBRULE($.compactConstructorDeclaration)\n    }, {\n      ALT: () => $.SUBRULE($.classBodyDeclaration)\n    }]);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-CompactConstructorDeclaration\n  $.RULE(\"compactConstructorDeclaration\", () => {\n    $.MANY(() => {\n      $.SUBRULE($.constructorModifier);\n    });\n    $.SUBRULE($.simpleTypeName);\n    $.SUBRULE($.constructorBody);\n  });\n  $.RULE(\"isClassDeclaration\", () => {\n    let isEmptyTypeDeclaration = false;\n    if ($.OPTION(() => {\n      $.CONSUME(t.Semicolon);\n    })) {\n      // an empty \"TypeDeclaration\"\n      isEmptyTypeDeclaration = true;\n    }\n    try {\n      // The {classModifier} is a super grammar of the \"interfaceModifier\"\n      // So we must parse all the \"{classModifier}\" before we can distinguish\n      // between the alternatives.\n      $.MANY({\n        GATE: () => (tokenMatcher($.LA(1).tokenType, t.At) && tokenMatcher($.LA(2).tokenType, t.Interface)) === false,\n        DEF: () => {\n          $.SUBRULE($.classModifier);\n        }\n      });\n    } catch (e) {\n      if (isRecognitionException(e)) {\n        // TODO: add original syntax error?\n        throw \"Cannot Identify if the <TypeDeclaration> is a <ClassDeclaration> or an <InterfaceDeclaration>\";\n      } else {\n        throw e;\n      }\n    }\n    if (isEmptyTypeDeclaration) {\n      return false;\n    }\n    const nextTokenType = this.LA(1).tokenType;\n    return tokenMatcher(nextTokenType, t.Class) || tokenMatcher(nextTokenType, t.Enum) || tokenMatcher(nextTokenType, t.Record) && tokenMatcher(this.LA(2).tokenType, t.Identifier);\n  });\n  $.RULE(\"identifyClassBodyDeclarationType\", () => {\n    try {\n      let nextTokenType = this.LA(1).tokenType;\n      let nextNextTokenType = this.LA(2).tokenType;\n      switch (nextTokenType) {\n        case t.Semicolon:\n          return classBodyTypes.semiColon;\n        case t.LCurly:\n          return classBodyTypes.instanceInitializer;\n        case t.Static:\n          switch (nextNextTokenType) {\n            case t.LCurly:\n              return classBodyTypes.staticInitializer;\n          }\n      }\n\n      // We have to look beyond the modifiers to distinguish between the declaration types.\n      $.MANY({\n        GATE: () => (tokenMatcher($.LA(1).tokenType, t.At) && tokenMatcher($.LA(2).tokenType, t.Interface)) === false,\n        DEF: () => {\n          // This alternation includes all possible modifiers for all types of \"ClassBodyDeclaration\"\n          // Certain combinations are syntactically invalid, this is **not** checked here,\n          // Invalid combinations will cause a descriptive parsing error message to be\n          // Created inside the relevant parsing rules **after** this lookahead\n          // analysis.\n          $.OR([{\n            GATE: () => (tokenMatcher($.LA(1).tokenType, t.At) && tokenMatcher($.LA(2).tokenType, t.Interface)) === false,\n            ALT: () => $.SUBRULE($.annotation)\n          }, {\n            ALT: () => $.CONSUME(t.Public)\n          }, {\n            ALT: () => $.CONSUME(t.Protected)\n          }, {\n            ALT: () => $.CONSUME(t.Private)\n          }, {\n            ALT: () => $.CONSUME(t.Abstract)\n          }, {\n            ALT: () => $.CONSUME(t.Static)\n          }, {\n            ALT: () => $.CONSUME(t.Final)\n          }, {\n            ALT: () => $.CONSUME(t.Transient)\n          }, {\n            ALT: () => $.CONSUME(t.Volatile)\n          }, {\n            ALT: () => $.CONSUME(t.Synchronized)\n          }, {\n            ALT: () => $.CONSUME(t.Native)\n          }, {\n            ALT: () => $.CONSUME(t.Sealed)\n          }, {\n            ALT: () => $.CONSUME(t.NonSealed)\n          }, {\n            ALT: () => $.CONSUME(t.Strictfp)\n          }]);\n        }\n      });\n      nextTokenType = this.LA(1).tokenType;\n      nextNextTokenType = this.LA(2).tokenType;\n      if (tokenMatcher(nextTokenType, t.Identifier) && tokenMatcher(nextNextTokenType, t.LBrace)) {\n        return classBodyTypes.constructorDeclaration;\n      }\n      if (tokenMatcher(nextTokenType, t.Class) || tokenMatcher(nextTokenType, t.Enum) || tokenMatcher(nextTokenType, t.Record)) {\n        return classBodyTypes.classDeclaration;\n      }\n      if (tokenMatcher(nextTokenType, t.Interface) || tokenMatcher(nextTokenType, t.At)) {\n        return classBodyTypes.interfaceDeclaration;\n      }\n      if (tokenMatcher(nextTokenType, t.Void)) {\n        // method with result type \"void\"\n        return classBodyTypes.methodDeclaration;\n      }\n\n      // Type Arguments common prefix\n      if (tokenMatcher(nextTokenType, t.Less)) {\n        this.SUBRULE($.typeParameters);\n        const nextTokenType = this.LA(1).tokenType;\n        const nextNextTokenType = this.LA(2).tokenType;\n        // \"<T> foo(\" -> constructor\n        if (tokenMatcher(nextTokenType, t.Identifier) && tokenMatcher(nextNextTokenType, t.LBrace)) {\n          return classBodyTypes.constructorDeclaration;\n        }\n        // typeParameters can only appear in method or constructor\n        // declarations, so if it is not a constructor it must be a method\n        return classBodyTypes.methodDeclaration;\n      }\n\n      // Only field or method declarations may be valid at this point.\n      // All other alternatives should have been attempted.\n      // **both** start with \"unannType\"\n      this.SUBRULE($.unannType);\n      const nextToken = this.LA(1);\n      nextNextTokenType = this.LA(2).tokenType;\n      // \"foo(...\" --> look like method start\n      if (tokenMatcher(nextToken, t.Identifier) && tokenMatcher(nextNextTokenType, t.LBrace)) {\n        return classBodyTypes.methodDeclaration;\n      }\n\n      // a valid field\n      // TODO: because we use token categories we should use tokenMatcher everywhere.\n      if (tokenMatcher(nextToken, t.Identifier)) {\n        return classBodyTypes.fieldDeclaration;\n      }\n      return classBodyTypes.unknown;\n    } catch (e) {\n      // TODO: add info from the original error\n      throw Error(\"Cannot Identify the type of a <classBodyDeclaration>\");\n    }\n  });\n  $.RULE(\"isDims\", () => {\n    $.MANY($.annotation);\n    return tokenMatcher(this.LA(1).tokenType, t.LSquare) && tokenMatcher(this.LA(2).tokenType, t.RSquare);\n  });\n  $.RULE(\"isCompactConstructorDeclaration\", () => {\n    $.MANY($.constructorModifier);\n    $.SUBRULE($.simpleTypeName);\n    $.CONSUME(t.LCurly);\n  });\n}\nmodule.exports = {\n  defineRules\n};","map":{"version":3,"names":["isRecognitionException","tokenMatcher","require","classBodyTypes","defineRules","$","t","RULE","MANY","SUBRULE","classModifier","OR","ALT","normalClassDeclaration","enumDeclaration","recordDeclaration","CONSUME","Class","typeIdentifier","OPTION","typeParameters","OPTION2","superclass","OPTION3","superinterfaces","OPTION4","classPermits","classBody","annotation","Public","Protected","Private","Abstract","Static","Final","Sealed","NonSealed","Strictfp","Less","typeParameterList","Greater","typeParameter","Comma","SUBRULE2","Extends","classType","Implements","interfaceTypeList","interfaceType","Permits","typeName","LCurly","classBodyDeclaration","RCurly","nextRuleType","BACKTRACK_LOOKAHEAD","identifyClassBodyDeclarationType","GATE","fieldDeclaration","semiColon","classMemberDeclaration","ARGS","instanceInitializer","staticInitializer","constructorDeclaration","methodDeclaration","classDeclaration","interfaceDeclaration","Semicolon","fieldModifier","unannType","variableDeclaratorList","Transient","Volatile","variableDeclarator","LA","tokenType","Identifier","DEF","variableDeclaratorId","Equals","variableInitializer","dims","expression","arrayInitializer","unannPrimitiveTypeWithOptionalDimsSuffix","unannReferenceType","unannPrimitiveType","isDims","numericType","Boolean","unannClassOrInterfaceType","unannClassType","typeArguments","MANY2","Dot","MANY3","CONSUME2","methodModifier","methodHeader","methodBody","Synchronized","Native","result","methodDeclarator","throws","Void","LBrace","formalParameterList","RBrace","This","formalParameter","BACKTRACK","variableParaRegularParameter","variableArityParameter","variableModifier","DotDotDot","Throws","exceptionTypeList","exceptionType","block","constructorModifier","constructorDeclarator","constructorBody","simpleTypeName","receiverParameter","explicitConstructorInvocation","blockStatements","unqualifiedExplicitConstructorInvocation","qualifiedExplicitConstructorInvocation","Super","argumentList","expressionName","Enum","enumBody","enumConstantList","enumBodyDeclarations","enumConstant","nextToken","At","enumConstantModifier","Record","recordHeader","recordBody","recordComponentList","recordComponent","recordComponentModifier","variableArityRecordComponent","recordBodyDeclaration","isCompactConstructorDeclaration","compactConstructorDeclaration","isEmptyTypeDeclaration","Interface","e","nextTokenType","nextNextTokenType","unknown","Error","LSquare","RSquare","module","exports"],"sources":["/Users/duyenpnc/Desktop/tool-tu-lam/your-app-name/node_modules/java-parser/src/productions/classes.js"],"sourcesContent":["\"use strict\";\n\nconst { isRecognitionException, tokenMatcher } = require(\"chevrotain\");\nconst { classBodyTypes } = require(\"./utils/class-body-types\");\n\nfunction defineRules($, t) {\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-ClassDeclaration\n  $.RULE(\"classDeclaration\", () => {\n    // Spec Deviation: extracted common \"{classModifier}\" prefix\n    //      extraction is safe because there are no other references to\n    //      \"normalClassDeclaration\" and \"enumDeclaration\"\n    $.MANY(() => {\n      $.SUBRULE($.classModifier);\n    });\n    $.OR([\n      { ALT: () => $.SUBRULE($.normalClassDeclaration) },\n      { ALT: () => $.SUBRULE($.enumDeclaration) },\n      { ALT: () => $.SUBRULE($.recordDeclaration) }\n    ]);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-NormalClassDeclaration\n  $.RULE(\"normalClassDeclaration\", () => {\n    // Spec Deviation: extracted common \"{classModifier}\" to \"classDeclaration\"\n    $.CONSUME(t.Class);\n    $.SUBRULE($.typeIdentifier);\n    $.OPTION(() => {\n      $.SUBRULE($.typeParameters);\n    });\n    $.OPTION2(() => {\n      $.SUBRULE($.superclass);\n    });\n    $.OPTION3(() => {\n      $.SUBRULE($.superinterfaces);\n    });\n    $.OPTION4(() => {\n      $.SUBRULE($.classPermits);\n    });\n    $.SUBRULE($.classBody);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-ClassModifier\n  $.RULE(\"classModifier\", () => {\n    $.OR([\n      { ALT: () => $.SUBRULE($.annotation) },\n      { ALT: () => $.CONSUME(t.Public) },\n      { ALT: () => $.CONSUME(t.Protected) },\n      { ALT: () => $.CONSUME(t.Private) },\n      { ALT: () => $.CONSUME(t.Abstract) },\n      { ALT: () => $.CONSUME(t.Static) },\n      { ALT: () => $.CONSUME(t.Final) },\n      { ALT: () => $.CONSUME(t.Sealed) },\n      { ALT: () => $.CONSUME(t.NonSealed) },\n      { ALT: () => $.CONSUME(t.Strictfp) }\n    ]);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-TypeParameters\n  $.RULE(\"typeParameters\", () => {\n    $.CONSUME(t.Less);\n    $.SUBRULE($.typeParameterList);\n    $.CONSUME(t.Greater);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-TypeParameterList\n  $.RULE(\"typeParameterList\", () => {\n    $.SUBRULE($.typeParameter);\n    $.MANY(() => {\n      $.CONSUME(t.Comma);\n      $.SUBRULE2($.typeParameter);\n    });\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-ClassExtends\n  $.RULE(\"superclass\", () => {\n    $.CONSUME(t.Extends);\n    $.SUBRULE($.classType);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-ClassImplements\n  $.RULE(\"superinterfaces\", () => {\n    $.CONSUME(t.Implements);\n    $.SUBRULE($.interfaceTypeList);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-InterfaceTypeList\n  $.RULE(\"interfaceTypeList\", () => {\n    $.SUBRULE($.interfaceType);\n    $.MANY(() => {\n      $.CONSUME(t.Comma);\n      $.SUBRULE2($.interfaceType);\n    });\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/preview/specs/sealed-classes-jls.html\n  $.RULE(\"classPermits\", () => {\n    $.CONSUME(t.Permits);\n    $.SUBRULE($.typeName);\n    $.MANY(() => {\n      $.CONSUME(t.Comma);\n      $.SUBRULE2($.typeName);\n    });\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-ClassBody\n  $.RULE(\"classBody\", () => {\n    $.CONSUME(t.LCurly);\n    $.MANY(() => {\n      $.SUBRULE($.classBodyDeclaration);\n    });\n    $.CONSUME(t.RCurly);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-ClassBodyDeclaration\n  $.RULE(\"classBodyDeclaration\", () => {\n    const nextRuleType = $.BACKTRACK_LOOKAHEAD(\n      $.identifyClassBodyDeclarationType\n    );\n\n    $.OR([\n      {\n        GATE: () =>\n          nextRuleType >= classBodyTypes.fieldDeclaration &&\n          nextRuleType <= classBodyTypes.semiColon,\n        ALT: () =>\n          $.SUBRULE($.classMemberDeclaration, {\n            ARGS: [nextRuleType]\n          })\n      },\n      // no gate needed for the initializers because these are LL(1) rules.\n      { ALT: () => $.SUBRULE($.instanceInitializer) },\n      { ALT: () => $.SUBRULE($.staticInitializer) },\n      {\n        GATE: () =>\n          tokenMatcher(nextRuleType, classBodyTypes.constructorDeclaration),\n        ALT: () => $.SUBRULE($.constructorDeclaration)\n      }\n    ]);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-ClassMemberDeclaration\n  $.RULE(\"classMemberDeclaration\", nextRuleType => {\n    $.OR([\n      {\n        GATE: () => nextRuleType === classBodyTypes.fieldDeclaration,\n        ALT: () => $.SUBRULE($.fieldDeclaration)\n      },\n      {\n        GATE: () => nextRuleType === classBodyTypes.methodDeclaration,\n        ALT: () => $.SUBRULE($.methodDeclaration)\n      },\n      {\n        GATE: () => nextRuleType === classBodyTypes.classDeclaration,\n        ALT: () => $.SUBRULE($.classDeclaration)\n      },\n      {\n        GATE: () => nextRuleType === classBodyTypes.interfaceDeclaration,\n        ALT: () => $.SUBRULE($.interfaceDeclaration)\n      },\n      {\n        // No GATE is needed as this is LL(1)\n        ALT: () => $.CONSUME(t.Semicolon)\n      }\n    ]);\n  });\n\n  // // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-FieldDeclaration\n  $.RULE(\"fieldDeclaration\", () => {\n    $.MANY(() => {\n      $.SUBRULE($.fieldModifier);\n    });\n    $.SUBRULE($.unannType);\n    $.SUBRULE($.variableDeclaratorList);\n    $.CONSUME(t.Semicolon);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-FieldModifier\n  $.RULE(\"fieldModifier\", () => {\n    $.OR([\n      { ALT: () => $.SUBRULE($.annotation) },\n      { ALT: () => $.CONSUME(t.Public) },\n      { ALT: () => $.CONSUME(t.Protected) },\n      { ALT: () => $.CONSUME(t.Private) },\n      { ALT: () => $.CONSUME(t.Static) },\n      { ALT: () => $.CONSUME(t.Final) },\n      { ALT: () => $.CONSUME(t.Transient) },\n      { ALT: () => $.CONSUME(t.Volatile) }\n    ]);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-VariableDeclaratorList\n  $.RULE(\"variableDeclaratorList\", () => {\n    $.SUBRULE($.variableDeclarator);\n    $.MANY({\n      // required to distinguish from patternList\n      GATE: () => !tokenMatcher(this.LA(3).tokenType, t.Identifier),\n      DEF: () => {\n        $.CONSUME(t.Comma);\n        $.SUBRULE2($.variableDeclarator);\n      }\n    });\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-VariableDeclarator\n  $.RULE(\"variableDeclarator\", () => {\n    $.SUBRULE($.variableDeclaratorId);\n    $.OPTION(() => {\n      $.CONSUME(t.Equals);\n      $.SUBRULE($.variableInitializer);\n    });\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-VariableDeclaratorId\n  $.RULE(\"variableDeclaratorId\", () => {\n    $.CONSUME(t.Identifier);\n    $.OPTION(() => {\n      $.SUBRULE($.dims);\n    });\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-VariableInitializer\n  $.RULE(\"variableInitializer\", () => {\n    $.OR([\n      { ALT: () => $.SUBRULE($.expression) },\n      { ALT: () => $.SUBRULE($.arrayInitializer) }\n    ]);\n  });\n\n  // // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-UnannType\n  $.RULE(\"unannType\", () => {\n    $.OR([\n      // Spec Deviation: The array type \"dims\" suffix was extracted to this rule\n      // to avoid backtracking for performance reasons.\n      { ALT: () => $.SUBRULE($.unannPrimitiveTypeWithOptionalDimsSuffix) },\n      { ALT: () => $.SUBRULE($.unannReferenceType) }\n    ]);\n  });\n\n  $.RULE(\"unannPrimitiveTypeWithOptionalDimsSuffix\", () => {\n    $.SUBRULE($.unannPrimitiveType);\n    $.OPTION({\n      GATE: () => this.BACKTRACK_LOOKAHEAD($.isDims),\n      DEF: () => $.SUBRULE2($.dims)\n    });\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-UnannPrimitiveType\n  $.RULE(\"unannPrimitiveType\", () => {\n    $.OR([\n      { ALT: () => $.SUBRULE($.numericType) },\n      { ALT: () => $.CONSUME(t.Boolean) }\n    ]);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-UnannReferenceType\n  $.RULE(\"unannReferenceType\", () => {\n    $.SUBRULE($.unannClassOrInterfaceType);\n    $.OPTION({\n      GATE: () => this.BACKTRACK_LOOKAHEAD($.isDims),\n      DEF: () => $.SUBRULE2($.dims)\n    });\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-UnannClassType\n  $.RULE(\"unannClassOrInterfaceType\", () => {\n    // Spec Deviation: The spec says: \"UnannClassType  | UnannInterfaceType\" but \"UnannInterfaceType\"\n    //                 is not mentioned in the parser because it is identical to \"UnannClassType\"\n    //                 The distinction is **semantic** not syntactic.\n    $.SUBRULE($.unannClassType);\n  });\n\n  $.RULE(\"unannClassType\", () => {\n    // Spec Deviation: Refactored left recursion and alternation to iterations\n    $.CONSUME(t.Identifier);\n    $.OPTION(() => {\n      $.SUBRULE($.typeArguments);\n    });\n    $.MANY2(() => {\n      $.CONSUME(t.Dot);\n      $.MANY3(() => {\n        $.SUBRULE2($.annotation);\n      });\n      // TODO: Semantic Check: This Identifier cannot be \"var\"\n      $.CONSUME2(t.Identifier);\n      $.OPTION2(() => {\n        $.SUBRULE2($.typeArguments);\n      });\n    });\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-UnannInterfaceType\n  $.RULE(\"unannInterfaceType\", () => {\n    $.SUBRULE($.unannClassType);\n  });\n\n  $.RULE(\"unannTypeVariable\", () => {\n    // TODO: Semantic Check: This Identifier cannot be \"var\"\n    // TODO: or define as token type?\n    $.CONSUME(t.Identifier);\n  });\n\n  // // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-MethodDeclaration\n  $.RULE(\"methodDeclaration\", () => {\n    $.MANY(() => {\n      $.SUBRULE($.methodModifier);\n    });\n    $.SUBRULE($.methodHeader);\n    $.SUBRULE($.methodBody);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-MethodModifier\n  $.RULE(\"methodModifier\", () => {\n    $.OR([\n      { ALT: () => $.SUBRULE($.annotation) },\n      { ALT: () => $.CONSUME(t.Public) },\n      { ALT: () => $.CONSUME(t.Protected) },\n      { ALT: () => $.CONSUME(t.Private) },\n      { ALT: () => $.CONSUME(t.Abstract) },\n      { ALT: () => $.CONSUME(t.Static) },\n      { ALT: () => $.CONSUME(t.Final) },\n      { ALT: () => $.CONSUME(t.Synchronized) },\n      { ALT: () => $.CONSUME(t.Native) },\n      { ALT: () => $.CONSUME(t.Strictfp) }\n    ]);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-MethodHeader\n  $.RULE(\"methodHeader\", () => {\n    // Spec Deviation: extracted common prefix from both alternatives\n    $.OPTION(() => {\n      $.SUBRULE($.typeParameters);\n      $.MANY(() => {\n        $.SUBRULE($.annotation);\n      });\n    });\n    $.SUBRULE($.result);\n    $.SUBRULE($.methodDeclarator);\n    $.OPTION2(() => {\n      $.SUBRULE($.throws);\n    });\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-Result\n  $.RULE(\"result\", () => {\n    $.OR([\n      { ALT: () => $.SUBRULE($.unannType) },\n      { ALT: () => $.CONSUME(t.Void) }\n    ]);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se8/html/jls-8.html#jls-MethodDeclarator\n  $.RULE(\"methodDeclarator\", () => {\n    $.CONSUME(t.Identifier);\n    $.CONSUME(t.LBrace);\n    $.OPTION(() => {\n      $.SUBRULE($.formalParameterList);\n    });\n    $.CONSUME(t.RBrace);\n    $.OPTION2(() => {\n      $.SUBRULE($.dims);\n    });\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-ReceiverParameter\n  $.RULE(\"receiverParameter\", () => {\n    $.MANY(() => {\n      $.SUBRULE($.annotation);\n    });\n    $.SUBRULE($.unannType);\n    $.OPTION(() => {\n      $.CONSUME(t.Identifier);\n      $.CONSUME(t.Dot);\n    });\n    $.CONSUME(t.This);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-FormalParameterList\n  $.RULE(\"formalParameterList\", () => {\n    $.SUBRULE($.formalParameter);\n    $.MANY(() => {\n      $.CONSUME(t.Comma);\n      $.SUBRULE2($.formalParameter);\n    });\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-FormalParameter\n  $.RULE(\"formalParameter\", () => {\n    $.OR([\n      // Spec Deviation: extracted to \"variableParaRegularParameter\"\n      {\n        GATE: $.BACKTRACK($.variableParaRegularParameter),\n        ALT: () => $.SUBRULE($.variableParaRegularParameter)\n      },\n      { ALT: () => $.SUBRULE($.variableArityParameter) }\n    ]);\n  });\n\n  // Spec Deviation: extracted from \"formalParameter\"\n  $.RULE(\"variableParaRegularParameter\", () => {\n    $.MANY(() => {\n      $.SUBRULE($.variableModifier);\n    });\n    $.SUBRULE($.unannType);\n    $.SUBRULE($.variableDeclaratorId);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-VariableArityParameter\n  $.RULE(\"variableArityParameter\", () => {\n    $.MANY(() => {\n      $.SUBRULE($.variableModifier);\n    });\n    $.SUBRULE($.unannType);\n    $.MANY2(() => {\n      $.SUBRULE($.annotation);\n    });\n    $.CONSUME(t.DotDotDot);\n    $.CONSUME(t.Identifier);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-VariableModifier\n  $.RULE(\"variableModifier\", () => {\n    $.OR([\n      { ALT: () => $.SUBRULE($.annotation) },\n      { ALT: () => $.CONSUME(t.Final) }\n    ]);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-Throws\n  $.RULE(\"throws\", () => {\n    $.CONSUME(t.Throws);\n    $.SUBRULE($.exceptionTypeList);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-ExceptionTypeList\n  $.RULE(\"exceptionTypeList\", () => {\n    $.SUBRULE($.exceptionType);\n    $.MANY(() => {\n      $.CONSUME(t.Comma);\n      $.SUBRULE2($.exceptionType);\n    });\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-ExceptionType\n  $.RULE(\"exceptionType\", () => {\n    // Spec Deviation: \"typeVariable\" alternative is missing because\n    //                 it is contained in classType.\n    $.SUBRULE($.classType);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-MethodBody\n  $.RULE(\"methodBody\", () => {\n    $.OR([\n      { ALT: () => $.SUBRULE($.block) },\n      { ALT: () => $.CONSUME(t.Semicolon) }\n    ]);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-InstanceInitializer\n  $.RULE(\"instanceInitializer\", () => {\n    $.SUBRULE($.block);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-StaticInitializer\n  $.RULE(\"staticInitializer\", () => {\n    $.CONSUME(t.Static);\n    $.SUBRULE($.block);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-ConstructorDeclaration\n  $.RULE(\"constructorDeclaration\", () => {\n    $.MANY(() => {\n      $.SUBRULE($.constructorModifier);\n    });\n    $.SUBRULE($.constructorDeclarator);\n    $.OPTION(() => {\n      $.SUBRULE($.throws);\n    });\n    $.SUBRULE($.constructorBody);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-ConstructorModifier\n  $.RULE(\"constructorModifier\", () => {\n    $.OR([\n      { ALT: () => $.SUBRULE($.annotation) },\n      { ALT: () => $.CONSUME(t.Public) },\n      { ALT: () => $.CONSUME(t.Protected) },\n      { ALT: () => $.CONSUME(t.Private) }\n    ]);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-ConstructorDeclarator\n  $.RULE(\"constructorDeclarator\", () => {\n    $.OPTION(() => {\n      $.SUBRULE($.typeParameters);\n    });\n    $.SUBRULE($.simpleTypeName);\n    $.CONSUME(t.LBrace);\n    $.OPTION2({\n      // a \"formalParameterList\" and a \"receiverParameter\"\n      // cannot be distinguished using fixed lookahead.\n      GATE: $.BACKTRACK($.receiverParameter),\n      DEF: () => {\n        $.SUBRULE($.receiverParameter);\n        $.CONSUME(t.Comma);\n      }\n    });\n    $.OPTION3(() => {\n      $.SUBRULE($.formalParameterList);\n    });\n    $.CONSUME(t.RBrace);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-SimpleTypeName\n  $.RULE(\"simpleTypeName\", () => {\n    // TODO: implement: Identifier but not var\n    $.CONSUME(t.Identifier);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-ConstructorBody\n  $.RULE(\"constructorBody\", () => {\n    $.CONSUME(t.LCurly);\n    $.OPTION({\n      GATE: $.BACKTRACK($.explicitConstructorInvocation),\n      DEF: () => {\n        $.SUBRULE($.explicitConstructorInvocation);\n      }\n    });\n    $.OPTION2(() => {\n      $.SUBRULE($.blockStatements);\n    });\n    $.CONSUME(t.RCurly);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-ExplicitConstructorInvocation\n  $.RULE(\"explicitConstructorInvocation\", () => {\n    // Spec Deviation: split into two separate sub rules.\n    $.OR([\n      {\n        ALT: () => $.SUBRULE($.unqualifiedExplicitConstructorInvocation)\n      },\n      { ALT: () => $.SUBRULE($.qualifiedExplicitConstructorInvocation) }\n    ]);\n  });\n\n  $.RULE(\"unqualifiedExplicitConstructorInvocation\", () => {\n    $.OPTION(() => {\n      $.SUBRULE($.typeArguments);\n    });\n    $.OR([\n      {\n        ALT: () => $.CONSUME(t.This)\n      },\n      {\n        ALT: () => $.CONSUME(t.Super)\n      }\n    ]);\n    $.CONSUME(t.LBrace);\n    $.OPTION2(() => {\n      $.SUBRULE($.argumentList);\n    });\n    $.CONSUME(t.RBrace);\n    $.CONSUME(t.Semicolon);\n  });\n\n  $.RULE(\"qualifiedExplicitConstructorInvocation\", () => {\n    // Spec Deviation: According to the spec the prefix may be a \"primary' as well,\n    //                 however, most primary variants don't make sense here\n    // TODO: discover which primary forms could be valid here\n    //       and handle only those specific cases.\n    //       It is best if we avoid referencing \"primary\" rule from\n    //       outside the expressions rules as the expressions rules are not aligned\n    //       to the spec style, so we want the smallest possible \"external api\"\n    //       for the expressions rules.\n    $.SUBRULE($.expressionName);\n    $.CONSUME(t.Dot);\n    $.OPTION(() => {\n      $.SUBRULE($.typeArguments);\n    });\n    $.CONSUME(t.Super);\n    $.CONSUME(t.LBrace);\n    $.OPTION2(() => {\n      $.SUBRULE($.argumentList);\n    });\n    $.CONSUME(t.RBrace);\n    $.CONSUME(t.Semicolon);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-EnumDeclaration\n  $.RULE(\"enumDeclaration\", () => {\n    $.MANY(() => {\n      $.SUBRULE($.classModifier);\n    });\n    $.CONSUME(t.Enum);\n    $.SUBRULE($.typeIdentifier);\n    $.OPTION(() => {\n      $.SUBRULE($.superinterfaces);\n    });\n    $.SUBRULE($.enumBody);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-EnumBody\n  $.RULE(\"enumBody\", () => {\n    $.CONSUME(t.LCurly);\n    $.OPTION(() => {\n      $.SUBRULE($.enumConstantList);\n    });\n    $.OPTION2(() => {\n      $.CONSUME(t.Comma);\n    });\n    $.OPTION3(() => {\n      $.SUBRULE($.enumBodyDeclarations);\n    });\n    $.CONSUME(t.RCurly);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-EnumConstantList\n  $.RULE(\"enumConstantList\", () => {\n    $.SUBRULE($.enumConstant);\n    $.MANY({\n      GATE: () => {\n        const nextToken = $.LA(2);\n        return (\n          tokenMatcher(nextToken, t.Identifier) || tokenMatcher(nextToken, t.At)\n        );\n      },\n      DEF: () => {\n        $.CONSUME(t.Comma);\n        $.SUBRULE2($.enumConstant);\n      }\n    });\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-EnumConstant\n  $.RULE(\"enumConstant\", () => {\n    $.MANY(() => {\n      $.SUBRULE($.enumConstantModifier);\n    });\n    $.CONSUME(t.Identifier);\n    $.OPTION(() => {\n      $.CONSUME(t.LBrace);\n      $.OPTION2(() => {\n        $.SUBRULE($.argumentList);\n      });\n      $.CONSUME(t.RBrace);\n    });\n    $.OPTION3(() => {\n      $.SUBRULE($.classBody);\n    });\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-EnumConstantModifier\n  $.RULE(\"enumConstantModifier\", () => {\n    $.SUBRULE($.annotation);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-EnumBodyDeclarations\n  $.RULE(\"enumBodyDeclarations\", () => {\n    $.CONSUME(t.Semicolon);\n    $.MANY(() => {\n      $.SUBRULE($.classBodyDeclaration);\n    });\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-RecordHeader\n  $.RULE(\"recordDeclaration\", () => {\n    $.CONSUME(t.Record);\n    $.SUBRULE($.typeIdentifier);\n    $.OPTION(() => {\n      $.SUBRULE($.typeParameters);\n    });\n    $.SUBRULE($.recordHeader);\n    $.OPTION2(() => {\n      $.SUBRULE($.superinterfaces);\n    });\n    $.SUBRULE($.recordBody);\n  });\n\n  $.RULE(\"recordHeader\", () => {\n    $.CONSUME(t.LBrace);\n    $.OPTION(() => {\n      $.SUBRULE($.recordComponentList);\n    });\n    $.CONSUME(t.RBrace);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-RecordComponentList\n  $.RULE(\"recordComponentList\", () => {\n    $.SUBRULE($.recordComponent);\n    $.MANY(() => {\n      $.CONSUME(t.Comma);\n      $.SUBRULE2($.recordComponent);\n    });\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-RecordComponent\n  $.RULE(\"recordComponent\", () => {\n    // Spec Deviation: extracted common \"{recordComponentModifier} unannType\" prefix\n    //      extraction is safe because there are no other references to\n    //      \"variableArityRecordComponent\"\n    $.MANY(() => {\n      $.SUBRULE($.recordComponentModifier);\n    });\n    $.SUBRULE($.unannType);\n    $.OR([\n      { ALT: () => $.CONSUME(t.Identifier) },\n      { ALT: () => $.SUBRULE($.variableArityRecordComponent) }\n    ]);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-VariableArityRecordComponent\n  // Spec Deviation: common \"{recordComponentModifier} unannType\" prefix was extracted in \"recordComponent\"\n  $.RULE(\"variableArityRecordComponent\", () => {\n    $.MANY(() => {\n      $.SUBRULE($.annotation);\n    });\n    $.CONSUME(t.DotDotDot);\n    $.CONSUME(t.Identifier);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-RecordComponentModifier\n  $.RULE(\"recordComponentModifier\", () => {\n    $.SUBRULE($.annotation);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-RecordBody\n  $.RULE(\"recordBody\", () => {\n    $.CONSUME(t.LCurly);\n    $.MANY(() => {\n      $.SUBRULE($.recordBodyDeclaration);\n    });\n    $.CONSUME(t.RCurly);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-RecordBodyDeclaration\n  $.RULE(\"recordBodyDeclaration\", () => {\n    $.OR([\n      {\n        GATE: () => this.BACKTRACK_LOOKAHEAD($.isCompactConstructorDeclaration),\n        ALT: () => $.SUBRULE($.compactConstructorDeclaration)\n      },\n      { ALT: () => $.SUBRULE($.classBodyDeclaration) }\n    ]);\n  });\n\n  // https://docs.oracle.com/javase/specs/jls/se16/html/jls-8.html#jls-CompactConstructorDeclaration\n  $.RULE(\"compactConstructorDeclaration\", () => {\n    $.MANY(() => {\n      $.SUBRULE($.constructorModifier);\n    });\n    $.SUBRULE($.simpleTypeName);\n    $.SUBRULE($.constructorBody);\n  });\n\n  $.RULE(\"isClassDeclaration\", () => {\n    let isEmptyTypeDeclaration = false;\n\n    if (\n      $.OPTION(() => {\n        $.CONSUME(t.Semicolon);\n      })\n    ) {\n      // an empty \"TypeDeclaration\"\n      isEmptyTypeDeclaration = true;\n    }\n\n    try {\n      // The {classModifier} is a super grammar of the \"interfaceModifier\"\n      // So we must parse all the \"{classModifier}\" before we can distinguish\n      // between the alternatives.\n      $.MANY({\n        GATE: () =>\n          (tokenMatcher($.LA(1).tokenType, t.At) &&\n            tokenMatcher($.LA(2).tokenType, t.Interface)) === false,\n        DEF: () => {\n          $.SUBRULE($.classModifier);\n        }\n      });\n    } catch (e) {\n      if (isRecognitionException(e)) {\n        // TODO: add original syntax error?\n        throw \"Cannot Identify if the <TypeDeclaration> is a <ClassDeclaration> or an <InterfaceDeclaration>\";\n      } else {\n        throw e;\n      }\n    }\n\n    if (isEmptyTypeDeclaration) {\n      return false;\n    }\n\n    const nextTokenType = this.LA(1).tokenType;\n    return (\n      tokenMatcher(nextTokenType, t.Class) ||\n      tokenMatcher(nextTokenType, t.Enum) ||\n      (tokenMatcher(nextTokenType, t.Record) &&\n        tokenMatcher(this.LA(2).tokenType, t.Identifier))\n    );\n  });\n\n  $.RULE(\"identifyClassBodyDeclarationType\", () => {\n    try {\n      let nextTokenType = this.LA(1).tokenType;\n      let nextNextTokenType = this.LA(2).tokenType;\n\n      switch (nextTokenType) {\n        case t.Semicolon:\n          return classBodyTypes.semiColon;\n        case t.LCurly:\n          return classBodyTypes.instanceInitializer;\n        case t.Static:\n          switch (nextNextTokenType) {\n            case t.LCurly:\n              return classBodyTypes.staticInitializer;\n          }\n      }\n\n      // We have to look beyond the modifiers to distinguish between the declaration types.\n      $.MANY({\n        GATE: () =>\n          (tokenMatcher($.LA(1).tokenType, t.At) &&\n            tokenMatcher($.LA(2).tokenType, t.Interface)) === false,\n        DEF: () => {\n          // This alternation includes all possible modifiers for all types of \"ClassBodyDeclaration\"\n          // Certain combinations are syntactically invalid, this is **not** checked here,\n          // Invalid combinations will cause a descriptive parsing error message to be\n          // Created inside the relevant parsing rules **after** this lookahead\n          // analysis.\n          $.OR([\n            {\n              GATE: () =>\n                (tokenMatcher($.LA(1).tokenType, t.At) &&\n                  tokenMatcher($.LA(2).tokenType, t.Interface)) === false,\n              ALT: () => $.SUBRULE($.annotation)\n            },\n            { ALT: () => $.CONSUME(t.Public) },\n            { ALT: () => $.CONSUME(t.Protected) },\n            { ALT: () => $.CONSUME(t.Private) },\n            { ALT: () => $.CONSUME(t.Abstract) },\n            { ALT: () => $.CONSUME(t.Static) },\n            { ALT: () => $.CONSUME(t.Final) },\n            { ALT: () => $.CONSUME(t.Transient) },\n            { ALT: () => $.CONSUME(t.Volatile) },\n            { ALT: () => $.CONSUME(t.Synchronized) },\n            { ALT: () => $.CONSUME(t.Native) },\n            { ALT: () => $.CONSUME(t.Sealed) },\n            { ALT: () => $.CONSUME(t.NonSealed) },\n            { ALT: () => $.CONSUME(t.Strictfp) }\n          ]);\n        }\n      });\n\n      nextTokenType = this.LA(1).tokenType;\n      nextNextTokenType = this.LA(2).tokenType;\n      if (\n        tokenMatcher(nextTokenType, t.Identifier) &&\n        tokenMatcher(nextNextTokenType, t.LBrace)\n      ) {\n        return classBodyTypes.constructorDeclaration;\n      }\n\n      if (\n        tokenMatcher(nextTokenType, t.Class) ||\n        tokenMatcher(nextTokenType, t.Enum) ||\n        tokenMatcher(nextTokenType, t.Record)\n      ) {\n        return classBodyTypes.classDeclaration;\n      }\n\n      if (\n        tokenMatcher(nextTokenType, t.Interface) ||\n        tokenMatcher(nextTokenType, t.At)\n      ) {\n        return classBodyTypes.interfaceDeclaration;\n      }\n\n      if (tokenMatcher(nextTokenType, t.Void)) {\n        // method with result type \"void\"\n        return classBodyTypes.methodDeclaration;\n      }\n\n      // Type Arguments common prefix\n      if (tokenMatcher(nextTokenType, t.Less)) {\n        this.SUBRULE($.typeParameters);\n        const nextTokenType = this.LA(1).tokenType;\n        const nextNextTokenType = this.LA(2).tokenType;\n        // \"<T> foo(\" -> constructor\n        if (\n          tokenMatcher(nextTokenType, t.Identifier) &&\n          tokenMatcher(nextNextTokenType, t.LBrace)\n        ) {\n          return classBodyTypes.constructorDeclaration;\n        }\n        // typeParameters can only appear in method or constructor\n        // declarations, so if it is not a constructor it must be a method\n        return classBodyTypes.methodDeclaration;\n      }\n\n      // Only field or method declarations may be valid at this point.\n      // All other alternatives should have been attempted.\n      // **both** start with \"unannType\"\n      this.SUBRULE($.unannType);\n\n      const nextToken = this.LA(1);\n      nextNextTokenType = this.LA(2).tokenType;\n      // \"foo(...\" --> look like method start\n      if (\n        tokenMatcher(nextToken, t.Identifier) &&\n        tokenMatcher(nextNextTokenType, t.LBrace)\n      ) {\n        return classBodyTypes.methodDeclaration;\n      }\n\n      // a valid field\n      // TODO: because we use token categories we should use tokenMatcher everywhere.\n      if (tokenMatcher(nextToken, t.Identifier)) {\n        return classBodyTypes.fieldDeclaration;\n      }\n\n      return classBodyTypes.unknown;\n    } catch (e) {\n      // TODO: add info from the original error\n      throw Error(\"Cannot Identify the type of a <classBodyDeclaration>\");\n    }\n  });\n\n  $.RULE(\"isDims\", () => {\n    $.MANY($.annotation);\n    return (\n      tokenMatcher(this.LA(1).tokenType, t.LSquare) &&\n      tokenMatcher(this.LA(2).tokenType, t.RSquare)\n    );\n  });\n\n  $.RULE(\"isCompactConstructorDeclaration\", () => {\n    $.MANY($.constructorModifier);\n    $.SUBRULE($.simpleTypeName);\n    $.CONSUME(t.LCurly);\n  });\n}\n\nmodule.exports = {\n  defineRules\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}