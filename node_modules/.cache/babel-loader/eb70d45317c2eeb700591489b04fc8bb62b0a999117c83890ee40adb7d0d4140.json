{"ast":null,"code":"var _jsxFileName = \"/Users/duyenpnc/Desktop/tool-tu-lam/generate-lld/src/genTableParam.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport queryString from \"query-string\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JsonTable1 = () => {\n  _s();\n  const [urlData, setUrlData] = useState(\"\");\n  const [tableData, setTableData] = useState([]);\n  useEffect(() => {\n    parseUrl();\n  }, [urlData]);\n  const copyToClipboard = () => {\n    const tableContent = tableData.map(row => `${row.attribute}\\t${row.dataType}\\t${row.description}\\t${row.required}\\n`);\n    const clipboardData = tableContent.join('');\n\n    // Create a textarea element, set its value to clipboardData, and trigger a copy\n    const textarea = document.createElement('textarea');\n    textarea.value = clipboardData;\n    document.body.appendChild(textarea);\n    textarea.select();\n    document.execCommand('copy');\n    document.body.removeChild(textarea);\n    setCopiedData(clipboardData);\n    alert('Table data copied to clipboard!');\n  };\n  const parseUrl = () => {\n    try {\n      const url = new URL(urlData);\n      const queryParams = queryString.parse(url.search);\n      const tableRows = Object.keys(queryParams).map((key, index) => ({\n        stt: index + 1,\n        attribute: key,\n        dataType: typeof queryParams[key],\n        description: \"\",\n        required: \"N\",\n        value: queryParams[key]\n      }));\n      setTableData(tableRows);\n    } catch (error) {\n      console.error(\"Invalid URL format\", error);\n      setTableData([]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      rows: 10,\n      cols: 40,\n      value: urlData,\n      onChange: e => setUrlData(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: parseUrl,\n      children: \"Generate Table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: copyToClipboard,\n      children: \"Copy to Clipboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"STT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Attribute\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"DataType\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Value\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: tableData.map(row => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.stt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.attribute\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.dataType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.required\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this)]\n        }, row.stt, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(JsonTable1, \"tyLJsjUYohLoCMMZ3oxrFt+5zyM=\");\n_c = JsonTable1;\nexport default JsonTable1;\nvar _c;\n$RefreshReg$(_c, \"JsonTable1\");","map":{"version":3,"names":["React","useState","useEffect","queryString","jsxDEV","_jsxDEV","JsonTable1","_s","urlData","setUrlData","tableData","setTableData","parseUrl","copyToClipboard","tableContent","map","row","attribute","dataType","description","required","clipboardData","join","textarea","document","createElement","value","body","appendChild","select","execCommand","removeChild","setCopiedData","alert","url","URL","queryParams","parse","search","tableRows","Object","keys","key","index","stt","error","console","children","rows","cols","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/duyenpnc/Desktop/tool-tu-lam/generate-lld/src/genTableParam.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport queryString from \"query-string\";\n\nconst JsonTable1 = () => {\n  const [urlData, setUrlData] = useState(\"\");\n  const [tableData, setTableData] = useState([]);\n\n  useEffect(() => {\n    parseUrl();\n  }, [urlData]);\n\n  const copyToClipboard = () => {\n    const tableContent = tableData.map(\n      (row) => `${row.attribute}\\t${row.dataType}\\t${row.description}\\t${row.required}\\n`\n    );\n\n    const clipboardData = tableContent.join('');\n    \n    // Create a textarea element, set its value to clipboardData, and trigger a copy\n    const textarea = document.createElement('textarea');\n    textarea.value = clipboardData;\n    document.body.appendChild(textarea);\n    textarea.select();\n    document.execCommand('copy');\n    document.body.removeChild(textarea);\n\n    setCopiedData(clipboardData);\n    alert('Table data copied to clipboard!');\n  };\n\n  const parseUrl = () => {\n    try {\n      const url = new URL(urlData);\n      const queryParams = queryString.parse(url.search);\n\n      const tableRows = Object.keys(queryParams).map((key, index) => ({\n        stt: index + 1,\n        attribute: key,\n        dataType: typeof queryParams[key],\n        description: \"\",\n        required: \"N\",\n        value: queryParams[key],\n      }));\n\n      setTableData(tableRows);\n    } catch (error) {\n      console.error(\"Invalid URL format\", error);\n      setTableData([]);\n    }\n  };\n\n  return (\n    <div>\n      <textarea\n        rows={10}\n        cols={40}\n        value={urlData}\n        onChange={(e) => setUrlData(e.target.value)}\n      />\n      <br />\n      <button onClick={parseUrl}>Generate Table</button>\n      <button onClick={copyToClipboard}>Copy to Clipboard</button>\n\n      {/* Display your table or other components based on tableData */}\n      <table>\n        <thead>\n          <tr>\n            <th>STT</th>\n            <th>Attribute</th>\n            <th>DataType</th>\n            <th>Description</th>\n            <th>Required</th>\n            <th>Value</th>\n          </tr>\n        </thead>\n        <tbody>\n          {tableData.map((row) => (\n            <tr key={row.stt}>\n              <td>{row.stt}</td>\n              <td>{row.attribute}</td>\n              <td>{row.dataType}</td>\n              <td>{row.description}</td>\n              <td>{row.required}</td>\n              <td>{row.value}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default JsonTable1;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}