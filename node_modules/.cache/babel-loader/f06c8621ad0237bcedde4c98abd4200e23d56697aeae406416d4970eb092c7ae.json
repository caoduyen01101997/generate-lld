{"ast":null,"code":"var _jsxFileName = \"/Users/duyenpnc/Desktop/tool-tu-lam/generate-lld/src/genTableParam.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport queryString from \"query-string\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JsonTable1 = () => {\n  _s();\n  const [urlData, setUrlData] = useState(\"\");\n  const [tableData, setTableData] = useState([]);\n  const [copiedData, setCopiedData] = useState(null);\n  useEffect(() => {\n    parseUrl();\n  }, [urlData]);\n  const parseUrl = () => {\n    try {\n      const url = new URL(urlData);\n      const queryParams = queryString.parse(url.search);\n      const tableRows = Object.keys(queryParams).map((key, index) => ({\n        stt: index + 1,\n        attribute: key,\n        dataType: typeof queryParams[key],\n        description: \"\",\n        required: \"N\"\n      }));\n      setTableData(tableRows);\n    } catch (error) {\n      console.error(\"Invalid URL format\", error);\n      setTableData([]);\n    }\n  };\n  const copyToClipboard = () => {\n    const tableContent = tableData.map(row => `${row.attribute}\\t${row.dataType}\\t${row.description}\\t${row.required}\\n`);\n    const clipboardData = tableContent.join(\"\");\n\n    // Create a textarea element, set its value to clipboardData, and trigger a copy\n    const textarea = document.createElement(\"textarea\");\n    textarea.value = clipboardData;\n    document.body.appendChild(textarea);\n    textarea.select();\n    document.execCommand(\"copy\");\n    document.body.removeChild(textarea);\n    setCopiedData(clipboardData);\n    alert(\"Table data copied to clipboard!\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      rows: 10,\n      cols: 40,\n      value: urlData,\n      onChange: e => setUrlData(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: parseUrl,\n      children: \"Generate Table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: copyToClipboard,\n      children: \"Copy Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"STT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Attribute\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"DataType\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: tableData.map(row => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.stt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.attribute\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.dataType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.required\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)]\n        }, row.stt, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), copiedData && /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: copiedData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(JsonTable1, \"pid3HTIBAAKAqZJPBEbD8AMK1tg=\");\n_c = JsonTable1;\nexport default JsonTable1;\nvar _c;\n$RefreshReg$(_c, \"JsonTable1\");","map":{"version":3,"names":["React","useState","useEffect","queryString","jsxDEV","_jsxDEV","JsonTable1","_s","urlData","setUrlData","tableData","setTableData","copiedData","setCopiedData","parseUrl","url","URL","queryParams","parse","search","tableRows","Object","keys","map","key","index","stt","attribute","dataType","description","required","error","console","copyToClipboard","tableContent","row","clipboardData","join","textarea","document","createElement","value","body","appendChild","select","execCommand","removeChild","alert","children","rows","cols","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/duyenpnc/Desktop/tool-tu-lam/generate-lld/src/genTableParam.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport queryString from \"query-string\";\n\nconst JsonTable1 = () => {\n  const [urlData, setUrlData] = useState(\"\");\n  const [tableData, setTableData] = useState([]);\n  const [copiedData, setCopiedData] = useState(null);\n\n  useEffect(() => {\n    parseUrl();\n  }, [urlData]);\n\n  const parseUrl = () => {\n    try {\n      const url = new URL(urlData);\n      const queryParams = queryString.parse(url.search);\n\n      const tableRows = Object.keys(queryParams).map((key, index) => ({\n        stt: index + 1,\n        attribute: key,\n        dataType: typeof queryParams[key],\n        description: \"\",\n        required: \"N\",\n      }));\n\n      setTableData(tableRows);\n    } catch (error) {\n      console.error(\"Invalid URL format\", error);\n      setTableData([]);\n    }\n  };\n\n  const copyToClipboard = () => {\n    const tableContent = tableData.map(\n      (row) => `${row.attribute}\\t${row.dataType}\\t${row.description}\\t${row.required}\\n`\n    );\n\n    const clipboardData = tableContent.join(\"\");\n\n    // Create a textarea element, set its value to clipboardData, and trigger a copy\n    const textarea = document.createElement(\"textarea\");\n    textarea.value = clipboardData;\n    document.body.appendChild(textarea);\n    textarea.select();\n    document.execCommand(\"copy\");\n    document.body.removeChild(textarea);\n\n    setCopiedData(clipboardData);\n    alert(\"Table data copied to clipboard!\");\n  };\n\n  return (\n    <div>\n      <textarea\n        rows={10}\n        cols={40}\n        value={urlData}\n        onChange={(e) => setUrlData(e.target.value)}\n      />\n      <br />\n      <button onClick={parseUrl}>Generate Table</button>\n      <button onClick={copyToClipboard}>Copy Data</button>\n\n      {/* Display your table or other components based on tableData */}\n      <table>\n        <thead>\n          <tr>\n            <th>STT</th>\n            <th>Attribute</th>\n            <th>DataType</th>\n            <th>Description</th>\n            <th>Required</th>\n          </tr>\n        </thead>\n        <tbody>\n          {tableData.map((row) => (\n            <tr key={row.stt}>\n              <td>{row.stt}</td>\n              <td>{row.attribute}</td>\n              <td>{row.dataType}</td>\n              <td>{row.description}</td>\n              <td>{row.required}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n\n      {/* Display copied data if available */}\n      {copiedData && <pre>{copiedData}</pre>}\n    </div>\n  );\n};\n\nexport default JsonTable1;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}