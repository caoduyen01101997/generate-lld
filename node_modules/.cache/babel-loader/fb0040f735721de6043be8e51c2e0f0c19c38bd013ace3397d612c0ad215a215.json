{"ast":null,"code":"import React,{useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const JsonTable=()=>{const[jsonData,setJsonData]=useState('');const[tableData,setTableData]=useState([]);const[copiedData,setCopiedData]=useState('');const parseJson=()=>{try{const parsedData=JSON.parse(jsonData);const tableRows=Object.entries(parsedData).map((_ref,index)=>{let[key,value]=_ref;return{stt:index+1,attribute:key,dataType:typeof value,description:'',required:'N'};});setTableData(tableRows);}catch(error){console.error('Invalid JSON format',error);setTableData([]);}};const copyToClipboard=()=>{const tableContent=tableData.map(row=>\"\".concat(row.attribute,\"\\t\").concat(row.dataType,\"\\t\").concat(row.description,\"\\t\").concat(row.required,\"\\n\"));const clipboardData=tableContent.join('');// Create a textarea element, set its value to clipboardData, and trigger a copy\nconst textarea=document.createElement('textarea');textarea.value=clipboardData;document.body.appendChild(textarea);textarea.select();document.execCommand('copy');document.body.removeChild(textarea);setCopiedData(clipboardData);alert('Table data copied to clipboard!');};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"textarea\",{rows:\"5\",cols:\"50\",value:jsonData,onChange:e=>setJsonData(e.target.value),placeholder:\"Enter JSON here\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{onClick:parseJson,children:\"Generate Table\"}),/*#__PURE__*/_jsx(\"button\",{onClick:copyToClipboard,children:\"Copy to Clipboard\"}),/*#__PURE__*/_jsxs(\"table\",{border:\"1\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"STT\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Attribute\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Data Type\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Description\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Required\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:tableData.map(row=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:row.stt}),/*#__PURE__*/_jsx(\"td\",{children:row.attribute}),/*#__PURE__*/_jsx(\"td\",{children:row.dataType}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:row.description,onChange:e=>{const updatedData=[...tableData];updatedData.find(item=>item.attribute===row.attribute).description=e.target.value;setTableData(updatedData);}})}),/*#__PURE__*/_jsx(\"td\",{children:row.required})]},row.attribute))})]}),copiedData&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Copied Data:\"}),/*#__PURE__*/_jsx(\"pre\",{children:copiedData})]})]});};export default JsonTable;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","JsonTable","jsonData","setJsonData","tableData","setTableData","copiedData","setCopiedData","parseJson","parsedData","JSON","parse","tableRows","Object","entries","map","_ref","index","key","value","stt","attribute","dataType","description","required","error","console","copyToClipboard","tableContent","row","concat","clipboardData","join","textarea","document","createElement","body","appendChild","select","execCommand","removeChild","alert","children","rows","cols","onChange","e","target","placeholder","onClick","border","type","updatedData","find","item"],"sources":["D:/sourcecode/create-json-type/your-app/generate-lld/src/GenTable.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst JsonTable = () => {\r\n  const [jsonData, setJsonData] = useState('');\r\n  const [tableData, setTableData] = useState([]);\r\n  const [copiedData, setCopiedData] = useState('');\r\n\r\n  const parseJson = () => {\r\n    try {\r\n      const parsedData = JSON.parse(jsonData);\r\n      const tableRows = Object.entries(parsedData).map(([key, value], index) => ({\r\n        stt: index + 1,\r\n        attribute: key,\r\n        dataType: typeof value,\r\n        description: '',\r\n        required: 'N',\r\n      }));\r\n      setTableData(tableRows);\r\n    } catch (error) {\r\n      console.error('Invalid JSON format', error);\r\n      setTableData([]);\r\n    }\r\n  };\r\n\r\n  const copyToClipboard = () => {\r\n    const tableContent = tableData.map(\r\n      (row) => `${row.attribute}\\t${row.dataType}\\t${row.description}\\t${row.required}\\n`\r\n    );\r\n\r\n    const clipboardData = tableContent.join('');\r\n    \r\n    // Create a textarea element, set its value to clipboardData, and trigger a copy\r\n    const textarea = document.createElement('textarea');\r\n    textarea.value = clipboardData;\r\n    document.body.appendChild(textarea);\r\n    textarea.select();\r\n    document.execCommand('copy');\r\n    document.body.removeChild(textarea);\r\n\r\n    setCopiedData(clipboardData);\r\n    alert('Table data copied to clipboard!');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <textarea\r\n        rows=\"5\"\r\n        cols=\"50\"\r\n        value={jsonData}\r\n        onChange={(e) => setJsonData(e.target.value)}\r\n        placeholder=\"Enter JSON here\"\r\n      />\r\n      <br />\r\n      <button onClick={parseJson}>Generate Table</button>\r\n      <button onClick={copyToClipboard}>Copy to Clipboard</button>\r\n\r\n      <table border=\"1\">\r\n        <thead>\r\n          <tr>\r\n            <th>STT</th>\r\n            <th>Attribute</th>\r\n            <th>Data Type</th>\r\n            <th>Description</th>\r\n            <th>Required</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {tableData.map((row) => (\r\n            <tr key={row.attribute}>\r\n              <td>{row.stt}</td>\r\n              <td>{row.attribute}</td>\r\n              <td>{row.dataType}</td>\r\n              <td>\r\n                <input\r\n                  type=\"text\"\r\n                  value={row.description}\r\n                  onChange={(e) => {\r\n                    const updatedData = [...tableData];\r\n                    updatedData.find((item) => item.attribute === row.attribute).description =\r\n                      e.target.value;\r\n                    setTableData(updatedData);\r\n                  }}\r\n                />\r\n              </td>\r\n              <td>{row.required}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      {copiedData && (\r\n        <div>\r\n          <h3>Copied Data:</h3>\r\n          <pre>{copiedData}</pre>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JsonTable;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}